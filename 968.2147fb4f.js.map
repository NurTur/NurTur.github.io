{"version":3,"file":"968.2147fb4f.js","mappings":"wMAsCA,QApC4B,WAAoB,IAAnBA,EAAmB,uDAAb,GAAIC,EAAS,uCAC5C,EAAgCC,EAAAA,SAAeF,GAA/C,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAA2B,SAACC,GAC9B,GAAIA,EAAMC,OAAOC,QAAjB,CACI,IAAMC,EAAeR,EAAKS,KAAI,SAACC,GAAD,OAAOA,EAAEC,MACvCR,EAAYK,QAGhBL,EAAY,KAGVS,EAAuB,SAACP,EAAOM,GACjC,IAAME,EAAaX,EAASY,QAAQH,GAChCI,EAAc,GAElB,OAAQF,GACJ,KAAM,EACFE,EAAc,GAAH,eAAOb,GAAP,CAAiBS,IAC5B,MACJ,KAAK,EACDI,GAAc,OAAIb,EAASc,MAAM,IACjC,MACJ,KAAKd,EAASe,OAAS,EACnBF,GAAc,OAAIb,EAASc,MAAM,GAAI,IACrC,MACJ,QACID,EAAc,GAAH,eAAOb,EAASc,MAAM,EAAGH,KAAzB,OAAyCX,EAASc,MAAMH,EAAa,KAGxFV,EAAYY,IAGhB,MAAO,CAACb,EAAUE,EAA0BQ,IC9BhD,SAASM,EAAWC,EAAKC,GACrB,MAAO,CACHT,IAAIU,EAAAA,EAAAA,IAAO,GACXF,IAAAA,EACAC,KAAAA,GAoDR,IAAMpB,EAAO,CACTkB,EAAW,eAAgB,yBAC3BA,EAAW,eAAgB,+BAC3BA,EAAW,eAAgB,8BAC3BA,EAAW,eAAgB,wBAC3BA,EAAW,eAAgB,0BAC3BA,EAAW,eAAgB,2BAC3BA,EAAW,eAAgB,8BAC3BA,EAAW,eAAgB,2BAC3BA,EAAW,eAAgB,iCAC3BA,EAAW,eAAgB,6BAC3BA,EAAW,eAAgB,8BAC3BA,EAAW,eAAgB,kCAC3BA,EAAW,eAAgB,8BAGzBI,EAAY,CACd,CACIX,GAAI,MACJY,SAAS,EACTC,gBAAgB,EAChBC,MAAO,aAEX,CACId,GAAI,OACJY,SAAS,EACTC,gBAAgB,EAChBC,MAAO,yBAIA,SAASC,IACpB,MAAmEC,EAAoB,GAAI3B,GAA3F,eAAOE,EAAP,KAAiBE,EAAjB,KAA2CQ,EAA3C,KACA,OACI,gBAAC,KAAD,CACIU,UAAWA,EACXtB,KAAMA,EACNE,SAAUA,EACVE,yBAA0BA,EAC1BQ,qBAAsBA","sources":["webpack://new_react_lending/./src/views/hook.js","webpack://new_react_lending/./src/views/main.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst useSelectedTableRow = (arr = [], rows) => {\r\n    const [selected, setSelected] = React.useState(arr);\r\n\r\n    const handleSelectAllTableRows = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.id);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleSelectTableRow = (event, id) => {\r\n        const selectedId = selected.indexOf(id);\r\n        let newSelected = [];\r\n\r\n        switch (selectedId) {\r\n            case -1:\r\n                newSelected = [...selected, id];\r\n                break;\r\n            case 0:\r\n                newSelected = [...selected.slice(1)];\r\n                break;\r\n            case selected.length - 1:\r\n                newSelected = [...selected.slice(0, -1)];\r\n                break;\r\n            default:\r\n                newSelected = [...selected.slice(0, selectedId), ...selected.slice(selectedId + 1)];\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    return [selected, handleSelectAllTableRows, handleSelectTableRow];\r\n};\r\n\r\nexport default useSelectedTableRow;\r\n","import React from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { Table } from '@/components';\r\nimport useSelectedTableRow from './hook';\r\n\r\nfunction createData(iin, name) {\r\n    return {\r\n        id: nanoid(8),\r\n        iin,\r\n        name\r\n    };\r\n}\r\n\r\n// const rows = [\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Donut', 452, 25.0, 51, 4.9),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n//   createData('KitKat', 518, 26.0, 65, 7.0),\r\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\r\n//   createData('Marshmallow', 318, 0, 81, 2.0),\r\n//   createData('Nougat', 360, 19.0, 9, 37.0),\r\n//   createData('Oreo', 437, 18.0, 63, 4.0),\r\n// ];\r\n\r\n// const headCells = [\r\n//   {\r\n//     id: 'name',\r\n//     numeric: false,\r\n//     disablePadding: true,\r\n//     label: 'Dessert (100g serving)',\r\n//   },\r\n//   {\r\n//     id: 'calories',\r\n//     numeric: true,\r\n//     disablePadding: false,\r\n//     label: 'Calories',\r\n//   },\r\n//   {\r\n//     id: 'fat',\r\n//     numeric: true,\r\n//     disablePadding: false,\r\n//     label: 'Fat (g)',\r\n//   },\r\n//   {\r\n//     id: 'carbs',\r\n//     numeric: true,\r\n//     disablePadding: false,\r\n//     label: 'Carbs (g)',\r\n//   },\r\n//   {\r\n//     id: 'protein',\r\n//     numeric: true,\r\n//     disablePadding: false,\r\n//     label: 'Protein (g)',\r\n//   },\r\n// ];\r\nconst rows = [\r\n    createData('890230151025', 'Зимина Любовь Юрьевна'),\r\n    createData('900230151025', 'Аксенова Надежда Валерьевна'),\r\n    createData('890560151025', 'Семенов Дмитрий Кириллович'),\r\n    createData('920230151025', 'Фомина Ирина Юрьевна'),\r\n    createData('890230151025', 'Иванов Сергей Петрович'),\r\n    createData('920230151030', 'Семенов Иван Кириллович'),\r\n    createData('920232551025', 'Ким Аркадий Константинович'),\r\n    createData('945230151025', 'Ли Александра Сергеевна'),\r\n    createData('000230151025', 'Корнилова Валерия Николлаевна'),\r\n    createData('560890151025', 'Капустин Михаил Семенович'),\r\n    createData('920230151895', 'Пушкин Александр Сергеевич'),\r\n    createData('984524562663', 'Печкин Александр Александрович'),\r\n    createData('952636654555', 'Косяков Алексей Сергеевич')\r\n];\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'iin',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'ИИН / БИН'\r\n    },\r\n    {\r\n        id: 'name',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Ф.И.О / Наименование'\r\n    }\r\n];\r\n\r\nexport default function Main1() {\r\n    const [selected, handleSelectAllTableRows, handleSelectTableRow] = useSelectedTableRow([], rows);\r\n    return (\r\n        <Table\r\n            headCells={headCells}\r\n            rows={rows}\r\n            selected={selected}\r\n            handleSelectAllTableRows={handleSelectAllTableRows}\r\n            handleSelectTableRow={handleSelectTableRow}\r\n        />\r\n    );\r\n}\r\n"],"names":["arr","rows","React","selected","setSelected","handleSelectAllTableRows","event","target","checked","newSelecteds","map","n","id","handleSelectTableRow","selectedId","indexOf","newSelected","slice","length","createData","iin","name","nanoid","headCells","numeric","disablePadding","label","Main1","useSelectedTableRow"],"sourceRoot":""}