{"version":3,"file":"487.eebf7fd5.js","mappings":"2NAuDA,QA9CA,WACI,ICPA,IAAOA,EAAWC,EAClB,IAAOC,EAAKC,EACZ,IAAOC,EAAQC,EACf,IAAOC,EAASC,EAChB,IAAOC,EAAWC,EAClB,IAAOC,EAAUC,EACjB,IAAOC,EAAQC,EDCf,GCPA,GAAkCC,EAAAA,EAAAA,UAAS,cAA3C,eAAOd,EAAP,KAAkBC,EAAlB,KACA,GAAsBa,EAAAA,EAAAA,UAAS,IAA/B,eAAOZ,EAAP,KAAYC,EAAZ,KACA,GAA4BW,EAAAA,EAAAA,UAAS,OAArC,eAAOV,EAAP,KAAeC,EAAf,KACA,GAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBC,EAAhB,KACA,GAAkCO,EAAAA,EAAAA,UAAS,IAA3C,eAAON,EAAP,KAAkBC,EAAlB,KACA,GAAgCK,EAAAA,EAAAA,UAAS,IAAzC,eAAOJ,EAAP,KAAiBC,EAAjB,KACA,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeC,EAAf,KAiCO,CA/BY,CACfb,UAAAA,EACAE,IAAAA,EACAE,OAAAA,EACAE,QAAAA,EACAE,UAAAA,EACAE,SAAAA,EACAE,OAAAA,GAGiB,CACjBG,UAAW,SAACC,GAAD,OAAOb,EAAOa,EAAEC,OAAOC,QAClCC,aAAc,SAACH,GAAD,OAAOH,EAAUG,EAAEC,OAAOC,QACxCE,aAAc,SAACJ,GAAD,OAAOX,EAAUW,EAAEC,OAAOC,QACxCG,cAAe,SAACL,GAAD,OAAOT,EAAWS,EAAEC,OAAOC,QAC1CI,eAAgB,SAACN,GAAD,OAAOL,EAAYK,EAAEC,OAAOC,QAC5CK,gBAAiB,SAACP,GAAD,OAAOf,EAAae,EAAEC,OAAOC,QAC9CM,gBAAiB,SAACR,GAAD,OAAOP,EAAaO,EAAEC,OAAOC,SAG/B,CACfO,SAAU,CACNC,MAAsB,IAAfxB,EAAIyB,OACXC,WAA2B,IAAf1B,EAAIyB,OAAe,4BAA8B,IAEjEE,cAAe,iBAAO,CAClBH,MAAsB,IAAfxB,EAAIyB,OACXC,WAA2B,IAAf1B,EAAIyB,OAAe,4BAA8B,QD5BrE,eAAOG,EAAP,KAAmBC,EAAnB,KAAiCC,EAAjC,KAEA,OACI,gCACI,gBAACC,EAAA,EAAD,CAAKC,WAAW,UAAUC,GAAI,CAAEC,QAAS,OAAQC,eAAgB,UAC7D,gBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,UAAW,gBAACC,EAAA,EAAD,MAAcN,GAAI,CAAEO,WAAY,UAAWC,GAAI,IAClF,wBAAMC,MAAO,CAAEC,WAAY,SAA3B,eAGR,gBAACZ,EAAA,EAAD,CAAKC,WAAW,WACZ,gBAAC,KAAD,CACIY,KAAM,CACF,CACIC,QAAS,MACTC,WACI,2BACI,gBAAC,KAAD,CAAkBlB,WAAYA,EAAYC,aAAcA,EAAcC,WAAYA,IAClF,2BACA,2BACA,2BACA,2BACA,2BACA,gBAAC,KAAD,CAAsBF,WAAYA,EAAYC,aAAcA,EAAcC,WAAYA,MAIlG,CACIe,QAAS,sBACTC,WAAY,gBAAC,KAAD,CAAkBlB,WAAYA,EAAYC,aAAcA,EAAcC,WAAYA,KAElG,CACIe,QAAS,WACTC,WAAY,gBAAC,KAAD,CAAsBlB,WAAYA,EAAYC,aAAcA,EAAcC,WAAYA,KAEtG,CACIe,QAAS,YACTC,WAAY,gBAAC,KAAD,CAAsBlB,WAAYA,EAAYC,aAAcA,EAAcC,WAAYA","sources":["webpack://new_react_lending/./src/views/clientCreate/index.jsx","webpack://new_react_lending/./src/views/clientCreate/hooks.js"],"sourcesContent":["import React from 'react';\r\nimport { Button, Box } from '@mui/material';\r\n// import { TabContext, TabList, TabPanel } from '@mui/lab';\r\n// import { tabsClasses } from '@mui/material/Tabs';\r\nimport { CustomTabs } from '@/components';\r\nimport { usePerformInfoForm } from './hooks';\r\nimport { FormCustomerInfo, FormCustomerContacts } from '@/containers';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\n\r\nfunction CreateClient() {\r\n    const [infoStates, infoHandlers, infoErrors] = usePerformInfoForm();\r\n\r\n    return (\r\n        <>\r\n            <Box gridColumn=\"span 12\" sx={{ display: 'flex', justifyContent: 'right' }}>\r\n                <Button variant=\"contained\" startIcon={<SaveIcon />} sx={{ background: '#0064ff', mr: 3 }}>\r\n                    <span style={{ fontWeight: 'bold' }}>Сохранить</span>\r\n                </Button>\r\n            </Box>\r\n            <Box gridColumn=\"span 12\">\r\n                <CustomTabs\r\n                    tabs={[\r\n                        {\r\n                            tabName: 'Все',\r\n                            tabContent: (\r\n                                <div>\r\n                                    <FormCustomerInfo infoStates={infoStates} infoHandlers={infoHandlers} infoErrors={infoErrors} />\r\n                                    <br />\r\n                                    <br />\r\n                                    <hr />\r\n                                    <br />\r\n                                    <br />\r\n                                    <FormCustomerContacts infoStates={infoStates} infoHandlers={infoHandlers} infoErrors={infoErrors} />\r\n                                </div>\r\n                            )\r\n                        },\r\n                        {\r\n                            tabName: 'Основная информация',\r\n                            tabContent: <FormCustomerInfo infoStates={infoStates} infoHandlers={infoHandlers} infoErrors={infoErrors} />\r\n                        },\r\n                        {\r\n                            tabName: 'Контакты',\r\n                            tabContent: <FormCustomerContacts infoStates={infoStates} infoHandlers={infoHandlers} infoErrors={infoErrors} />\r\n                        },\r\n                        {\r\n                            tabName: 'Реквизиты',\r\n                            tabContent: <FormCustomerContacts infoStates={infoStates} infoHandlers={infoHandlers} infoErrors={infoErrors} />\r\n                        }\r\n                    ]}\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateClient;\r\n","import React, { useState } from 'react';\r\n\r\nconst usePerformInfoForm = () => {\r\n    const [legalForm, setLegalform] = useState('individual');\r\n    const [iin, setIin] = useState('');\r\n    const [gender, setGender] = useState('man');\r\n    const [surname, setSurname] = useState('');\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [adress, setAdress] = useState('');\r\n\r\n    const infoStates = {\r\n        legalForm,\r\n        iin,\r\n        gender,\r\n        surname,\r\n        firstname,\r\n        lastname,\r\n        adress\r\n    };\r\n\r\n    const infoHandlers = {\r\n        handleIin: (e) => setIin(e.target.value),\r\n        handleAdress: (e) => setAdress(e.target.value),\r\n        handleGender: (e) => setGender(e.target.value),\r\n        handleSurname: (e) => setSurname(e.target.value),\r\n        handleLastname: (e) => setLastname(e.target.value),\r\n        handleLegalform: (e) => setLegalform(e.target.value),\r\n        handleFirstname: (e) => setFirstname(e.target.value)\r\n    };\r\n\r\n    const infoErrors = {\r\n        checkIin: {\r\n            error: iin.length === 0,\r\n            helperText: iin.length === 0 ? 'Введите корректные данные' : ''\r\n        },\r\n        checkRuString: () => ({\r\n            error: iin.length === 0,\r\n            helperText: iin.length === 0 ? 'Введите корректные данные' : ''\r\n        })\r\n    };\r\n\r\n    return [infoStates, infoHandlers, infoErrors];\r\n};\r\n\r\nexport { usePerformInfoForm };\r\n"],"names":["legalForm","setLegalform","iin","setIin","gender","setGender","surname","setSurname","firstname","setFirstname","lastname","setLastname","adress","setAdress","useState","handleIin","e","target","value","handleAdress","handleGender","handleSurname","handleLastname","handleLegalform","handleFirstname","checkIin","error","length","helperText","checkRuString","infoStates","infoHandlers","infoErrors","Box","gridColumn","sx","display","justifyContent","Button","variant","startIcon","Save","background","mr","style","fontWeight","tabs","tabName","tabContent"],"sourceRoot":""}