{"version":3,"file":"main.603e780a.js","mappings":"0QASMA,EAAM,IAAIC,IAChBD,EAAIE,IAAI,QAAQ,SAACC,GAAD,OAAU,IAAIC,KAAKD,GAAME,mBAAmB,SACvDH,IAAI,YAAY,SAACC,GAAD,gBAAa,IAAIC,KAAKD,GAAME,mBAAmB,MAA/C,gBAA4D,IAAID,KAAKD,GAAMG,mBAAmB,UAC9GJ,IAAI,YAAY,SAACC,GAAD,uBAAUI,EAAAA,GAAAA,IAAwB,qBAAlC,aAAU,EAAuCC,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOP,KAAMQ,QAChGT,IAAI,sBAAsB,SAACC,GAAD,uBAAUI,EAAAA,GAAAA,IAAwB,8BAAlC,aAAU,EAAgDC,MAAK,SAACC,GAAD,OAASA,EAAIG,MAAQT,KAAMU,eACpHX,IAAI,aAAa,SAACC,GAAD,aAAU,UAAAW,OAAOX,UAAP,eAAcY,QAAQ,KAAM,SACvDb,IAAI,UAAU,SAACC,GAAD,OAAWA,EAAO,KAAO,SACvCD,IAAI,WAAW,SAACC,GAAD,OAAU,uBAAKa,MAAO,CAAEC,MAAO,gBAAkBd,MAChED,SAAIgB,GAAW,SAACf,GAAD,OAAUA,KAqN9B,QAnNA,SAAuBgB,GACnB,IACIC,EASAD,EATAC,UACAC,EAQAF,EARAE,KACAC,EAOAH,EAPAG,YACAC,EAMAJ,EANAI,SAKAC,GACAL,EALAM,SAKAN,EAJAO,yBAIAP,EAHAQ,qBAGAR,EAFAS,kBAEAT,EADAK,UAEEK,GAAQC,EAAAA,EAAAA,KAGd,IAFiBC,EAAAA,EAAAA,OAESC,EAAAA,EAAAA,UAAS,QAAnC,eACA,GADA,WAC8BA,EAAAA,EAAAA,UAASZ,EAAU,GAAGV,KAApD,eACA,GADA,WACsCsB,EAAAA,EAAAA,UAASZ,EAAU,GAAGa,OAA5D,eACA,GADA,WACwBD,EAAAA,EAAAA,UAAS,IAAjC,eAAOE,EAAP,KACA,GADA,MACsCF,EAAAA,EAAAA,UAAS,KAA/C,eAAOG,EAAP,KACA,GADA,MACwCH,EAAAA,EAAAA,UAAS,CAAEtB,GAAI,KAAM0B,MAAM,KAAnE,eACA,GADA,WACoCJ,EAAAA,EAAAA,UAAS,KAA7C,eAiDMK,GAjDN,UAiDsB,SAAClC,EAAMmC,GAAe,MAClCC,EAAgB,UAAGhC,EAAAA,GAAAA,IAAwB+B,UAA3B,aAAG,EAAqC9B,MAAK,SAACC,GAAD,OAASA,EAAIG,MAAQT,KACpFqC,EAAOX,EAAMW,KAAKC,MACtB,OAAQF,MAAAA,OAAR,EAAQA,EAAkBG,OACtB,IAAK,qBACL,IAAK,UACL,IAAK,oBACDF,EAAOX,EAAMW,KAAKG,QAClB,MACJ,IAAK,WACL,IAAK,SACDH,EAAOX,EAAMW,KAAKI,QAClB,MACJ,QACIJ,EAAOX,EAAMW,KAAKC,MAG1B,OAAO,gBAACI,EAAA,EAAD,CAAMC,MAAK,WAAKP,MAAAA,OAAA,EAAAA,EAAkB1B,cAAe,IAAMkC,GAAIP,MAgBtE,OAbkBN,EAAO,GAAIc,KAAKC,IAAI,GAAI,EAAIf,GAAQC,EAAcd,EAAK6B,QAEzElD,EAAIE,IAAI,0BAA0B,SAACC,GAAD,OAAUkC,EAAclC,EAAM,6BAC3DD,IAAI,wBAAwB,SAACC,GAAD,OAAUkC,EAAclC,EAAM,2BAC1DD,IAAI,UAAU,SAACC,GAAD,OAAUkC,EAAclC,EAAM,eAC5CD,IAAI,YAAY,SAACC,GACd,IAAIgD,EAAY,GAIhB,QAHMhD,EAAO,GAAKoB,IAAepB,EAAO,IAAMoB,KAC1C4B,EAAY,OAET,uBAAKnC,MAAO,CAAEoC,MAAOD,IAAchD,MAI9C,gBAAC,IAAD,CAAK4C,GAAI,CAAE9B,MAAO,SACd,gBAAC,IAAD,CAAO8B,GAAI,CAAE9B,MAAO,OAAQoC,GAAI,EAAGC,WAAYhC,EAAc,UAAY,KACpEE,EAED,gBAAC,EAAD,S,cC3HV+B,GAAgBC,E,QAAAA,IAAO,MAAPA,CAAc,CAChCC,SAAU,QACVC,IAAK,EACLC,KAAM,EACNC,OAAQ,KACR3C,MAAO,SAWX,QARA,WACI,OACI,gBAACsC,EAAD,KACI,gBAACM,EAAA,EAAD,CAAgBT,MAAM,cCFlC,QAVA,SAAkBU,GACd,OAAO,SAAU3C,GACb,OACI,gBAAC,EAAA4C,SAAD,CAAUC,SAAU,gBAAC,EAAD,OAChB,gBAACF,EAAc3C,M,wBCgC/B,QAnCA,SAAuBA,GACnB,IAAQK,EAAaL,EAAbK,SACFyC,EAAMzC,GAAYA,EAAS0B,OAAS1B,EAAS0B,OAAS,EAAI,EAWhE,OACI,gBAAC,IAAD,CACIH,GAAI,CACAmB,QAAS,OACTC,WAAY,SACZlD,MAAO,cACPmD,OAAQ,SAACvC,GAAD,0BAAwBA,EAAMwC,QAAQC,UAC9CC,aAAc,EACdC,QAAS,mBACTpB,MAAO,iBACPqB,OAAQ,OACRC,EAAG,IACH,OAAQ,CACJC,GAAI,OAIH,IAARV,EAAYzC,EAzBVA,EAASxB,KAAI,SAAC4E,EAAIC,GAAL,OAChB,gBAAC,EAAAC,SAAD,CAAUlE,KAAKmE,EAAAA,EAAAA,IAAO,IACjBH,EACAX,IAAQY,GAAS,gBAAC,IAAD,CAASG,YAAY,WAAWC,QAAQ,QAAQC,UAAQ,U,0CCFlFC,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,E,uCCGR,QAZA,YAAkH,IAAjGC,EAAiG,EAAjGA,YAAaC,EAAoF,EAApFA,WAAYhE,EAAwE,EAAxEA,SAAwE,IAA9DiE,MAAAA,OAA8D,MAAtD,wBAAsD,MAA7BxE,MAAAA,OAA6B,MAArB,IAAqB,MAAhBwD,OAAAA,OAAgB,MAAP,IAAO,EAC9G,OACI,uBAAKiB,UAAU,SACX,gBAAC,IAAD,CAAYC,UAAW1E,EAAO2E,WAAYnB,EAAQoB,eAAgBL,EAAYM,OAAQP,GAClF,0BAAKE,GACL,2BACCjE,K,inBC8BjB,QApCA,SAAiBL,GACb,IAAQ4E,EAAU5E,EAAV4E,MAER,OACI,gBAAC,IAAD,CAAKhD,GAAE,GAAIU,SAAU,YAAesC,IAChC,gBAACC,EAAA,GAAD,QACIf,QAAQ,cACRlC,GAAI,CACAK,MAAO,SAACvB,GAAD,OAAWA,EAAMwC,QAAQ4B,KAA4B,UAAvBpE,EAAMwC,QAAQ6B,KAAmB,IAAM,OAEhFC,KAAM,GACNC,UAAW,GACPjF,EAPR,CAQIuB,MAAO,OAEX,gBAACsD,EAAA,GAAD,QACIf,QAAQ,gBACRoB,eAAa,EACbtD,IAAE,QACEK,MAAO,SAACvB,GAAD,MAAmC,UAAvBA,EAAMwC,QAAQ6B,KAAmB,UAAY,WAChEI,kBAAmB,QACnB7C,SAAU,WACVE,KAAM,GAJR,aAMS4C,EAAAA,EAAAA,QAAmC,CACtCC,cAAe,UAGvBL,KAAM,GACNC,UAAW,GACPjF,M,mlBC9BpB,SAASsF,EAAaC,GAClB,OAAIA,EAAOhE,MAAQ,EACR,qBAEJ,qBAGX,IAAMiE,EAAoB,IAAIC,KAAKC,aAAa,QAAS,CACrD7F,MAAO,WACP8F,SAAU,QAGRC,EAAW,CACb9E,KAAM,SACN+E,SAAU,IACVC,cAAeR,EACfS,eAAgB,gBAAGxE,EAAH,EAAGA,MAAH,OAAeiE,EAAkBQ,OAAOzE,KAEtD0E,EAAU,CACZ,CAAEC,MAAO,KAAMC,WAAY,QAASrG,MAAO,IAAKsG,UAAU,GAD9C,GAGRF,MAAO,QACPC,WAAY,SACTP,GALK,GAOVM,MAAO,mBAAoBC,WAAY,oBAAuBP,GAChE,CACIM,MAAO,6BACPC,WAAY,6BACZrF,KAAM,SACN+E,SAAU,IACVC,cAAeR,GAbP,GAeVY,MAAO,qBAAsBC,WAAY,sBAAyBP,GACpE,CACIM,MAAO,sBACPC,WAAY,sBACZrF,KAAM,SACN+E,SAAU,IACVC,cAAeR,EACfS,eAAgB,SAACR,GACb,IAAKA,EAAOhE,MACR,MAAO,MAGX,IAAM8E,EAAiB1G,OAAO4F,EAAOhE,OAAO+E,iBAC5C,gBAAUD,EAAV,QA5BI,GA+BVH,MAAO,aAAcC,WAAY,cAAiBP,IAWlD1F,EAAO,CACT,CACIX,GAAI,YACJgH,MAAO,SACPC,iBAAkB,KAClBC,2BAA4B,MAC5BC,mBAAoB,YACpBC,oBAAqB,MACrBC,WAAY,WAEhB,CACIrH,GAAI,gBACJgH,MAAO,UACPC,iBAAkB,MAClBC,2BAA4B,KAC5BC,mBAAoB,KACpBC,oBAAqB,GACrBC,WAAY,YAEhB,CACIrH,GAAI,UACJgH,MAAO,MACPC,kBAAmB,IACnBC,2BAA4B,MAC5BC,mBAAoB,SACpBC,oBAAqB,OACrBC,WAAY,SAEhB,CACIrH,GAAI,gBACJgH,MAAO,MACPC,iBAAkB,SAClBC,2BAA4B,MAC5BC,mBAAoB,MACpBC,oBAAqB,GACrBC,WAAY,eAEhB,CACIrH,GAAI,QACJgH,MAAO,OACPC,kBAAmB,QACnBC,2BAA4B,MAC5BC,mBAAoB,SACpBC,oBAAqB,GACrBC,WAAY,UAEhB,CACIrH,GAAI,kBACJgH,MAAO,OACPC,iBAAkB,WAClBC,2BAA4B,MAC5BC,mBAAoB,KACpBC,oBAAqB,GACrBC,WAAY,SAEhB,CACIrH,GAAI,QACJgH,MAAO,MACPC,iBAAkB,MAClBC,2BAA4B,IAC5BC,mBAAoB,OACpBC,oBAAqB,GACrBC,WAAY,YAEhB,CACIrH,GAAI,SACJgH,MAAO,SACPC,iBAAkB,OAClBC,2BAA4B,MAC5BC,mBAAoB,SACpBC,oBAAqB,MACrBC,WAAY,OAEhB,CACIrH,GAAI,eACJgH,MAAO,MACPC,iBAAkB,GAClBC,2BAA4B,IAC5BC,mBAAoB,MACpBC,oBAAqB,GACrBC,WAAY,SAEhB,CACIrH,GAAI,MACJgH,MAAO,MACPC,iBAAkB,KAClBC,2BAA4B,OAC5BC,mBAAoB,KACpBC,oBAAqB,MACrBC,WAAY,OAEhB,CACIrH,GAAI,oBACJgH,MAAO,MACPC,iBAAkB,IAClBC,2BAA4B,KAC5BC,mBAAoB,IACpBC,oBAAqB,MACrBC,WAAY,OAEhB,CACIrH,GAAI,aACJgH,MAAO,OACPC,iBAAkB,IAClBC,2BAA4B,KAC5BC,mBAAoB,IACpBC,oBAAqB,EACrBC,WAAY,MAEhB,CACIrH,GAAI,gBACJgH,MAAO,KACPC,iBAAkB,IAClBC,2BAA4B,IAC5BC,mBAAoB,KACpBC,oBAAqB,GACrBC,WAAY,OAEhB,CACIrH,GAAI,WACJgH,MAAO,IACPC,iBAAkB,IAClBC,2BAA4B,IAC5BC,mBAAoB,IACpBC,oBAAqB,GACrBC,WAAY,OAEhB,CACIrH,GAAI,SACJgH,MAAO,IACPC,iBAAkB,MAClBC,2BAA4B,KAC5BC,mBAAoB,MACpBC,oBAAqB,GACrBC,WAAY,QAEhB,CACIrH,GAAI,WACJgH,MAAO,IACPC,iBAAkB,IAClBC,2BAA4B,KAC5BC,mBAAoB,KACpBC,oBAAqB,GACrBC,WAAY,OAIL,SAASC,IACpB,OACI,gBAAC,IAAD,CACIjF,GAAI,CACA0B,OAAQ,IACRxD,MAAO,OACP,2BAA4B,CACxBgH,gBAAiB,OACjB/D,QAAS,OACTgE,eAAgB,QAEpB,wBAAyB,CACrBD,gBAAiB,UACjB/D,QAAS,OACTgE,eAAgB,QAEpB,wBAAyB,CACrBD,gBAAiB,cACjB/D,QAAS,OACTgE,eAAgB,UAIxB,gBAACC,EAAA,EAAD,CAAU9G,KAAMA,EAAM+F,QAASA,EAASgB,SAAU,GAAIC,mBAAoB,CAAC,S,4YCjOvF,IAAMC,GAAO9E,EAAAA,EAAAA,IAAO,OAAQ,CAAE+E,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IAA9ChF,EAAiE,gBAAG3B,EAAH,EAAGA,MAAH,EAAUO,KAAV,O,qWAAA,IACvEP,EAAM4G,WAAWC,gBAwBxB,QArBmB,WACf,IAAM7G,GAAQC,EAAAA,EAAAA,KACR6G,GAAWC,EAAAA,EAAAA,MAEjB,GAA8D5G,EAAAA,EAAAA,WAAS,GAAvE,eAAgC6G,GAAhC,WAMA,OAJAC,EAAAA,EAAAA,YAAU,WACNH,GAASI,EAAAA,EAAAA,OAAmBC,MAAK,kBAAMH,GAA2B,QACnE,IAGC,gBAAC,IAAD,CAAK9F,GAAI,CAAEmB,QAAS,SAChB,gBAACoE,EAAD,CAAMzG,MAAOA,GACT,gBAAC,IAAD,CAAKqC,QAAQ,OAAO+E,oBAAoB,kBAAkBC,IAAK,EAAGnG,GAAI,CAAEoG,GAAI,IACxE,gBAAC,KAAD,U,SCNI3F,EAAAA,EAAAA,IAAO,MAAPA,EAAc,kBAAgB,CAClD4F,OAAQ,UACRC,QAAS,GACT,UAAW,CACP/F,WAJ8B,EAAGzB,MAIfwC,QAAQiF,QAAQC,OAEtC,sBAAuB,CACnBF,QAAS,O,4DC1BDG,EAAAA,IAAWC,EAAAA,ICGvBC,EAAAA,GACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,ICOJ,QAfyB,SAAC,GAAiB,IAAfxI,EAAe,EAAfA,SAEhByI,GADSC,EAAAA,EAAAA,MACTD,SAUR,OARAnB,EAAAA,EAAAA,YAAU,WACNqB,OAAOC,SAAS,CACZ1G,IAAK,EACLC,KAAM,EACN0G,SAAU,aAEf,CAACJ,IAEGzI,GAAY,M,uBC6BvB,QAtCA,YAMG,IALC8I,EAKD,EALCA,aACAC,EAID,EAJCA,eAID,IAHCC,WAAAA,OAGD,MAHc,KAGd,MAFCC,wBAAAA,OAED,MAF2B,KAE3B,MADChF,MAAAA,OACD,MADS,gBACT,EAOC,OANAqD,EAAAA,EAAAA,YAAU,YACqC,IAAvCwB,EAAaI,wBACbF,MAAAA,GAAAA,OAEL,CAACF,EAAaI,wBAGb,gBAAC,KAAD,CACInF,YAAa+E,EAAaI,sBAC1BlF,WAAY+E,EAAeI,4BAC3BlF,MAAOA,EACPxE,MAAO,IACPwD,OAAQ,KAER,gBAAC,IAAD,CAAKmG,WAAW,WACZ,uBAAK5J,MAAO,CAAEkD,QAAS,OAAQgE,eAAgB,QAAS2C,WAAY,SAChE,gBAAC,IAAD,CACI5F,QAAQ,YACR6F,UAAW,gBAACC,EAAA,EAAD,MACXhI,GAAI,CAAEiI,UAAW,QACjBC,QAASV,EAAeI,6BAJ5B,YASJ,gBAAC,KAAD,CAAOvJ,UAAW8J,EAAAA,GAA0B7J,KAAMoJ,GAA2BH,EAAaG,8B,gpBCd1G,SAASU,EAA6BV,GAClC,OAAIA,EACmCA,MAAAA,OAAH,EAAGA,EAAyBzK,KAAI,SAACG,GAAD,0BACzDA,GADyD,IAE5DiL,oBACI,UAAA7K,EAAAA,GAAAA,IAAwB,8BAAxB,mBAAgDC,MAAK,SAACgI,GAAD,OAAUA,EAAK5H,MAAQT,EAAKkL,2BAAjF,eAAoGxK,cAAe,GACvHyK,YAAY,UAAA/K,EAAAA,GAAAA,IAAwB,kCAAxB,mBAAoDC,MAAK,SAACgI,GAAD,OAAUA,EAAK5H,MAAQT,EAAKoL,iBAArF,eAA8F1K,cAAe,QAK1H4J,EA2CX,SAASe,EAAoBC,EAAeC,GACxC,OAAID,IAAiBA,MAAAA,OAAA,EAAAA,EAAevI,QAAS,EAChBuI,EAAczL,KAAI,SAACG,GAAD,8BACpCA,GADoC,IAEvCwL,SAASD,MAAAA,GAAA,UAAAA,EAAYE,YAAZ,mBAAkBpL,MAAK,SAACgI,GAAD,OAAUA,EAAK9H,KAAOP,EAAK0L,mBAAlD,eAA6DC,WAAY,MAClFC,cAAc,UAAAxL,EAAAA,GAAAA,IAAwB,qBAAxB,mBAAuCC,MAAK,SAACgI,GAAD,OAAUA,EAAK9H,KAAOP,EAAK6L,qBAAvE,eAAoFrL,OAAQ,MAC1GyK,oBAAoB,UAAA7K,EAAAA,GAAAA,IAAwB,yBAAxB,mBAA2CC,MAAK,SAACgI,GAAD,OAAUA,EAAK5H,MAAQT,EAAK8L,iBAA5E,eAAqFpL,cAAe,WAKzH4K,EAGX,SAASS,EAA0BN,GAC/B,OAAIA,IAAQA,MAAAA,OAAA,EAAAA,EAAM1I,QAAS,EACP0I,EAAK5L,KAAI,SAACG,GAAD,gBAAW,CAChCO,GAAIP,EAAKO,GACTyL,aAAchM,EAAKgM,aACnBC,eAAgBjM,EAAKiM,eACrBC,gBAAgB,UAAAlM,EAAKmM,cAAL,eAAaD,iBAAkB,MAC/CP,UAAU,UAAA3L,EAAKmM,cAAL,eAAaR,WAAY,MACnCS,KAAK,UAAApM,EAAKmM,cAAL,eAAaC,MAAO,MACzBV,SAAU1L,EAAK0L,SACfN,OAAQpL,EAAKoL,WAKdK,I,gGC3GX,IA8JMY,EAAyB,CAC3B,CACI9L,GAAI,eACJuB,KAAM,OACNa,MAAO,gBAEX,CACIpC,GAAI,OACJoC,MAAO,QAEX,CACIpC,GAAI,UACJuB,KAAM,UACNa,MAAO,WAGX,CACIpC,GAAI,cACJoC,MAAO,yBAMX,CACIpC,GAAI,eACJoC,MAAO,UAEX,CACIpC,GAAI,qBACJoC,MAAO,yBAEX,CACIpC,GAAI,WACJoC,MAAO,uBAEX,CACIpC,GAAI,iBACJoC,MAAO,6BAEX,CACIpC,GAAI,iBACJoC,MAAO,oCAEX,CACIpC,GAAI,eACJuB,KAAM,OACNa,MAAO,kBAEX,CACIpC,GAAI,SACJuB,KAAM,SACNa,MAAO,WAuJToI,EAA2B,CAC7B,CACIxK,GAAI,OACJuB,KAAM,OACNa,MAAO,gBAEX,CACIpC,GAAI,qBACJoC,MAAO,YAEX,CACIpC,GAAI,SACJoC,MAAO,SAEX,CACIpC,GAAI,aACJoC,MAAO,WAwFT2J,EAAa,CACf,CAAE/L,GAAI,EAAGG,YAAa,GACtB,CAAEH,GAAI,EAAGG,YAAa,GACtB,CAAEH,GAAI,EAAGG,YAAa,GACtB,CAAEH,GAAI,EAAGG,YAAa,GACtB,CAAEH,GAAI,EAAGG,YAAa,GACtB,CAAEH,GAAI,EAAGG,YAAa,GACtB,CAAEH,GAAI,EAAGG,YAAa,GACtB,CAAEH,GAAI,EAAGG,YAAa,GACtB,CAAEH,GAAI,EAAGG,YAAa,GACtB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,IACvB,CAAEH,GAAI,GAAIG,YAAa,KAGrB6L,EAAiB,CACnB,CAAEhM,GAAI,OAAQC,KAAM,MACpB,CAAED,GAAI,QAASC,KAAM,QAGnBgM,EAAS,CACX,CAAEjM,GAAI,OAAQC,KAAM,WACpB,CAAED,GAAI,QAASC,KAAM,YAGnBiM,EAAyB,CAC3B,CAAElM,GAAI,OAAQC,KAAM,yBACpB,CAAED,GAAI,QAASC,KAAM,cAGnBkM,EAA4B,CAC9B,CAAEnM,GAAI,SAAUC,KAAM,qBACtB,CAAED,GAAI,OAAQC,KAAM,oBACpB,CAAED,GAAI,OAAQC,KAAM,oBAElBmM,EAAkB,CAAC,CAAEpM,GAAI,QAASC,KAAM,gC,mECjgBxCoM,EACF,kBACA,SAACpE,GACGA,GAASqE,EAAAA,EAAAA,OAETC,EAAAA,EAAAA,KAAA,mBAAiC,IAAIjE,MACjC,SAACkE,GAAD,OAAUvE,GAASwE,EAAAA,EAAAA,IAAuBD,OAC1C,SAACE,GAAD,OAAkBC,EAAAA,EAAAA,GAAa1E,EAAUyE,EAAc,yD,kHCL7DE,EACF,kBACA,SAAC3E,GACGA,GAASqE,EAAAA,EAAAA,OACTrE,GAAS4E,EAAAA,EAAAA,GAAe,CAAEtL,KAAM,OAAQuL,QAAS,oCACjDP,EAAAA,EAAAA,KAAA,yBAAuC,IAAIjE,MACvC,SAACkE,GAAD,OAAUvE,GAAS8E,EAAAA,EAAAA,IAAoBP,OACvC,SAACE,GAAD,OAAkBC,EAAAA,EAAAA,GAAa1E,EAAUyE,EAAc,uDA0D7DM,EACF,eAAChH,EAAD,uDAAU,KAAV,OACA,SAACiC,GACG,GAAIjC,EACA,OAAOuG,EAAAA,EAAAA,KAAA,yBAAuCvG,GAAQsC,MAClD,SAACkE,GAAD,OAAUA,KACV,SAACE,GAEG,MADAC,EAAAA,EAAAA,GAAa1E,EAAUyE,EAAc,qCAC/B,IAAIO,SAItBhF,GAASiF,EAAAA,EAAAA,SA+BXC,EACF,eAACnH,EAAD,uDAAU,GAAV,OACA,SAACiC,GAAD,OACIsE,EAAAA,EAAAA,KAAA,+BAA6CvG,GAAQsC,MACjD,SAACkE,GAAD,OAAUvE,GAAS4E,EAAAA,EAAAA,GAAe,CAAEtL,KAAM,UAAWuL,QAAS,iCAC9D,SAACJ,GAEG,MADAC,EAAAA,EAAAA,GAAa1E,EAAUyE,EAAc,+BAC/B,IAAIO,Y,mECrH1B,IAAMG,EACF,eAACpH,EAAD,uDAAU,GAAV,OACA,SAACiC,GACGA,GAASqE,EAAAA,EAAAA,OACTC,EAAAA,EAAAA,KAAA,mBAAiCvG,GAAQsC,MACrC,SAACkE,GAAD,OAAUvE,GAASoF,EAAAA,EAAAA,IAAqBb,OACxC,SAACE,GAAD,OAAkBC,EAAAA,EAAAA,GAAa1E,EAAUyE,EAAc,6C,0ICI7D7M,EAAsB,IAAIN,IAShC,SAAS+N,EAAcrF,EAAUsF,EAAUxL,GAAoB,IAAbiE,EAAa,uDAAJ,GACjDwH,EAAiBD,EAASE,MAAMF,EAASG,YAAY,KAAO,GAElE,OAAK7N,EAAoB8N,IAAIH,GAUtB3N,EAAoB+N,IAAIJ,GATpBjB,EAAAA,EAAAA,KAAagB,EAAUvH,GAAQsC,MAClC,SAACkE,GACG,IAAMqB,EAAMC,MAAMC,QAAQvB,GAAQA,EAAOA,EAAKtB,MAAQ,GACtDrL,EAAoBL,IAAIgO,EAAgBK,MAE5C,SAACnB,GAAD,OAAkBC,EAAAA,EAAAA,GAAa1E,EAAUyE,EAAc3K,MAjBnElC,EACKL,IAAI,SAAUyM,EAAAA,IACdzM,IAAI,aAAcuM,EAAAA,IAClBvM,IAAI,kBAAmB4M,EAAAA,IACvB5M,IAAI,iBAAkBwM,EAAAA,IACtBxM,IAAI,yBAA0B0M,EAAAA,IAC9B1M,IAAI,4BAA6B2M,EAAAA,IAkBtC,IAAM9D,EAAkB,kBAAM,SAACJ,GAAD,OAC1B+F,QAAQC,IAAI,EACRC,EAAAA,EAAAA,0BAAwB,WACpBjG,GAASmF,EAAAA,EAAAA,OACLnF,GAASoE,EAAAA,EAAAA,OACTiB,EAAcrF,EAAD,mBAA+B,oCAAqC,CAC7EkG,MAAO,CACHC,QAAQ,KAGhBd,EAAcrF,EAAD,uCAAmD,uCAChEqF,EAAcrF,EAAD,oCAAgD,2CAC7DqF,EAAcrF,EAAD,sCAAkD,yCAC/DqF,EAAcrF,EAAD,oCAAgD,2CAC7DqF,EAAcrF,EAAD,yCAAqD,iDAClEqF,EAAcrF,EAAD,2BAAuC,6CACpDqF,EAAcrF,EAAD,iCAA6C,mDAC1DqF,EAAcrF,EAAD,6BAAyC,oDACtDqF,EAAcrF,EAAD,gCAA4C,uDACzDqF,EAAcrF,EAAD,qCAAiD,oDAC9DqF,EAAcrF,EAAD,4CAAwD,8CACrEqF,EAAcrF,EAAD,uCAAmD,2CAChEqF,EAAcrF,EAAD,+BAA2C,oCACxDqF,EAAcrF,EAAD,kCAA8C,qCAC3DqF,EAAcrF,EAAD,6BAAyC,yCACtDqF,EAAcrF,EAAD,2BAAuC,4CACpDqF,EAAcrF,EAAD,0CAAsD,4CACnEqF,EAAcrF,EAAD,2BAAuC,4CACpDqF,EAAcrF,EAAD,mCAA+C,qCAC5DqF,EAAcrF,EAAD,sCAAkD,uDAC/DqF,EAAcrF,EAAD,qCAAiD,mDAC9DqF,EAAcrF,EAAD,8BAA0C,4DACvDqF,EAAcrF,EAAD,iDAA6D,wBAC1EqF,EAAcrF,EAAD,sCAAkD,wD,wDClD/E,QArBA,SAAsBA,EAAUyE,EAAc2B,GAK1C,YAJiC,IAAtB3B,EAAa4B,MACpBrG,GAAS4E,EAAAA,EAAAA,GAAe,CAAEtL,KAAM,QAASuL,QAAS,yBAAF,OAA2BuB,MAGxE3B,EACF4B,OACAhG,MAAK,SAACiG,GACH,GAA0B,YAAtB,OAAOA,EAAIC,QACX,IAAK,IAAMtO,KAAOqO,EAAIC,OAClBvG,GAAS4E,EAAAA,EAAAA,GAAe,CAAEtL,KAAM,QAASuL,QAASyB,EAAIC,OAAOtO,UAEpC,iBAAfqO,EAAIC,OAClBvG,GAAS4E,EAAAA,EAAAA,GAAe,CAAEtL,KAAM,QAASuL,QAASyB,EAAIC,UAEtDvG,GAAS4E,EAAAA,EAAAA,GAAe,CAAEtL,KAAM,QAASuL,QAASuB,QAVvD,OAaI,kBAAMpG,GAAS4E,EAAAA,EAAAA,GAAe,CAAEtL,KAAM,QAASuL,QAASuB,U,8CClBjExB,EAAiB,SAAC4B,GAAD,MAAc,CAAElN,KAAMmN,EAAAA,EAA6BD,QAAAA,K,wCCFnE,IAAME,EAAoB,oBACpBC,EAA+B,gC,+CCWtC1B,G,QAA6B,eAACuB,EAAD,uDAAW,KAAX,MAAqB,CACpDlN,KAAMmN,EAAAA,GACND,QAAAA,M,4ECdG,IAAMI,EAAsB,sBACtBC,EAA0B,0BAC1BC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAoB,oBACpBC,EAAkB,mB,0ECHzB5C,EAAc,iBAAO,CAAE/K,KAAMmN,EAAAA,GAAwBD,SAAS,IAC9DpB,EAAuB,eAACoB,EAAD,uDAAW,GAAX,MAAmB,CAAElN,KAAMmN,EAAAA,GAAmCD,QAAAA,IAErF1B,EAAsB,eAAC0B,EAAD,uDAAW,GAAX,MAAmB,CAAElN,KAAMmN,EAAAA,GAA+BD,QAAAA,IAEhFhC,EAAyB,eAACgC,EAAD,uDAAW,GAAX,MAAmB,CAAElN,KAAMmN,EAAAA,GAAqCD,QAAAA,K,uFCPxF,IAAMU,EAAe,eACfC,EAA0B,0BAC1BC,EAAqC,gCACrCC,EAAsB,sBACtBC,EAA0B,0BAC1BC,EAA4B,4BAC5BC,EAAiB,kB,gCCN9B,MAAM,EAA+B,CAAC,OAAS,6B,aCUzClD,EACF,SAACmD,GAAD,OACA,SAACnC,EAAUvH,GAAgC,IAAxB2J,IAAwB,yDAGjCC,GAFQC,aAAaC,QAAQ,QAEvB,GAAH,OAAMC,IAAAA,QAAN,OAAsBxC,IAEzByC,EAAO,CACTC,QAAS,CACL,iDACAC,OAAQ,MACR,8BAA+B,UAC/B,gBAAiB,oBAErBR,OAAAA,GAaJ,MAVI,aAAaS,KAAKT,IAAW1J,IAI7BgK,EAAKI,KAAOpK,GAGZ,iBAAiBmK,KAAKT,KACtBM,EAAKI,KAAOC,KAAKC,UAAUtK,IAExBuK,MAAMX,EAAKI,GAAM1H,MAAK,SAACiG,GAM1B,OALmB,MAAfA,EAAI1D,SACJgF,aAAaW,WAAW,QACxB/G,OAAOgH,SAASC,KAAhB,UAA0BjH,OAAOgH,SAASE,OAA1C,WAGCpC,EAAIqC,GAIJjB,EAGEpB,EAAID,OAFAC,EAJAP,QAAQ6C,OAAOtC,QAUtC,SACIX,IAAKrB,EAAQ,OACbuE,MAAOvE,EAAQ,SACfwE,KAAMxE,EAAQ,QACdyE,IAAKzE,EAAQ,OACb0E,OAAQ1E,EAAQ,Y,4rBCzDb,IAAM2E,EAAe,CACxB9L,OAAQ,CAAC,WACT+L,QAAQ,GAGN7R,EAAM,IAAIC,IAChBD,EAAIE,ICPqB,YDOI,UAAUA,ICRf,WDQuC,UAU/D,QARgB,WAAkC,IAAjC4R,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC9C,GAAI/R,EAAIqO,IAAI0D,EAAO9P,MAAO,CACtB,IAAMrB,EAAMZ,EAAIsO,IAAIyD,EAAO9P,MAC3B,cAAY6P,GAAZ,cAAoBlR,EAAMmR,EAAO5C,UAErC,OAAO2C,G,6lBEZX,IAAMF,EAAe,CACjBI,SAAS,EACTtG,WAAY,GACZuG,qBAAsB,GACtBxG,cAAe,GACfyG,kBAAmB,GACnBC,oBAAqB,GACrBC,UAAW,IAGTpS,EAAM,IAAIC,IAChBD,EAAIE,IAAIkP,EAAAA,GAAwB,WAC3BlP,IAAIkP,EAAAA,GAAmC,cACvClP,IAAIkP,EAAAA,GAA8C,wBAClDlP,IAAIkP,EAAAA,GAAmC,qBACvClP,IAAIkP,EAAAA,GAA+B,iBACnClP,IAAIkP,EAAAA,GAA0B,aAC9BlP,IAAIkP,EAAAA,GAAqC,uBAa9C,QAXgB,WAAkC,IAAjC0C,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC9C,GAAI/R,EAAIqO,IAAI0D,EAAO9P,MAAO,CACtB,IAAMrB,EAAMZ,EAAIsO,IAAIyD,EAAO9P,MAI3B,MAHY,wBAARrB,IACAmR,EAAO5C,QAAP,OAAsB4C,EAAO5C,SAA7B,IAAsCvD,MAAMM,EAAAA,EAAAA,IAA0B6F,EAAO5C,QAAQvD,SAEzF,OAAYkG,GAAZ,YAAmBE,SAAS,GAAQpR,EAAMmR,EAAO5C,UAErD,OAAO2C,G,6lBC5BX,IAAMF,EAAe,GACf5R,EAAM,IAAIC,IAWhB,QAVgB,WAAkC,IAAjC6R,EAAiC,uDAAzBF,EAAcG,EAAW,uCAI9C,OAHA/R,EAAIE,IAAIkP,EAAAA,EAAR,kBAAyC0C,GAAzC,IAAkDO,MAAM,GAASN,EAAO5C,YAAYjP,IAAIkP,EAAAA,GAAxF,OACO0C,EAAM3D,MAAM,KAEfnO,EAAIqO,IAAI0D,EAAO9P,MACRjC,EAAIsO,IAAIyD,EAAO9P,MAEnB6P,G,mlBCTX,IAAMF,EAAe,CACjBI,SAAS,EACTM,gBAAiB,KACjBC,sBAAuB,KACvBC,cAAe,KACfC,UAAW,KACXC,gBAAiB,MAGf1S,EAAM,IAAIC,IAChBD,EAAIE,IAAIkP,EAAAA,GAA+B,WAClClP,IAAIkP,EAAAA,EAAmC,mBACvClP,IAAIkP,EAAAA,GAAiC,iBACrClP,IAAIkP,EAAAA,GAA6B,aACjClP,IAAIkP,EAAAA,GAAiC,yBACrClP,IAAIkP,EAAAA,EAA2B,mBAUpC,QARgB,WAAkC,IAAjC0C,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC9C,GAAI/R,EAAIqO,IAAI0D,EAAO9P,MAAO,CACtB,IAAMrB,EAAMZ,EAAIsO,IAAIyD,EAAO9P,MAC3B,cAAY6P,GAAZ,YAAmBE,SAAS,GAAQpR,EAAMmR,EAAO5C,UAErD,OAAO2C,GCXX,SAPoBa,EAAAA,EAAAA,IAAgB,CAChCC,cAAAA,EACAC,aAAAA,EACAC,MAAAA,EACAC,OAAAA,ICJJ,IAAMC,EAAgB,CAClBpS,IAAK,OACLqS,QAAAA,EAAAA,GAGEC,GAAmBC,EAAAA,EAAAA,IAAeH,EAAeI,GACjDC,GAAQC,EAAAA,EAAAA,IAAYJ,GAAkBK,EAAAA,EAAAA,IAAgBC,EAAAA,I,kDCPtDC,GAAgBC,E,QAAAA,KAASC,EAAAA,EAAAA,OAAK,kBAAM,0DAwB1C,QAtBmB,kBACf,gBAAC,KAAD,KACI,gBAAC,KAAD,CAAOC,KAAK,IAAIC,QAAS,gBAAC,KAAD,OACrB,gBAAC,KAAD,CAAOhP,OAAK,EAACgP,QAAS,gBAACJ,EAAD,W,cCTlC,SAAgB,MAAQ,OAAO,aAAe,UAAU,WAAa,UAAU,YAAc,UAAU,YAAc,UAAU,WAAa,UAAU,eAAiB,UAAU,aAAe,UAAU,cAAgB,UAAU,cAAgB,UAAU,aAAe,UAAU,aAAe,UAAU,WAAa,UAAU,YAAc,UAAU,YAAc,UAAU,WAAa,UAAU,UAAY,UAAU,UAAY,UAAU,YAAc,UAAU,WAAa,UAAU,WAAa,UAAU,aAAe,UAAU,YAAc,UAAU,YAAc,UAAU,OAAS,UAAU,QAAU,UAAU,QAAU,OAAO,QAAU,UAAU,QAAU,UAAU,QAAU,UAAU,QAAU,UAAU,QAAU,UAAU,UAAY,UAAU,eAAiB,UAAU,WAAa,UAAU,WAAa,UAAU,cAAgB,UAAU,gBAAkB,UAAU,kBAAoB,UAAU,iBAAmB,UAAU,gBAAkB,UAAU,gBAAkB,UAAU,eAAiB,UAAU,eAAiB,UAAU,mBAAqB,UAAU,kBAAoB,UAAU,kBAAoB,UAAU,iBAAmB,UAAU,iBAAmB,WCI/pC,SAASK,EAAgBjS,GAAO,QAC3C,MAAO,CACHkS,WAAYlS,MAAAA,GAAF,UAAEA,EAAO+Q,qBAAT,aAAE,EAAsBmB,WAClCC,GAAI,CACAC,WAAY,IACZ7Q,MAAOvB,EAAMqS,QACbC,SAAU,WAEdC,GAAI,CACAD,SAAU,WACV/Q,MAAOvB,EAAMqS,QACbD,WAAY,KAEhBI,GAAI,CACAF,SAAU,OACV/Q,MAAOvB,EAAMqS,QACbD,WAAY,KAEhBK,GAAI,CACAH,SAAU,UACV/Q,MAAOvB,EAAMqS,QACbD,WAAY,KAEhBM,GAAI,CACAJ,SAAU,SACV/Q,MAAOvB,EAAMqS,QACbD,WAAY,KAEhBO,GAAI,CACAL,SAAU,WACV/Q,MAAOvB,EAAMqS,QACbD,WAAY,KAEhBQ,UAAW,CACPN,SAAU,WACVF,WAAY,IACZ7Q,MAAOvB,EAAM6S,UAEjBC,UAAW,CACPR,SAAU,UACVF,WAAY,IACZ7Q,MAAOvB,EAAM+S,mBAEjBC,QAAS,CACLV,SAAU,UACV/Q,MAAOvB,EAAM+S,kBACbX,WAAY,KAEhBa,MAAO,CACHX,SAAU,WACVF,WAAY,IACZc,WAAY,WAEhBC,MAAO,CACHC,cAAe,MACfhB,WAAY,IACZc,WAAY,QACZ3R,MAAOvB,EAAMqT,iBAEjBC,OAAQ,CACJC,cAAe,cAEnBC,YAAa,CACTC,UAAW,EACXC,aAAc,EACd,YAAa,CACT7R,IAAK,GACLC,KAAM,EACNP,MAAOvB,EAAM2T,QACb,yBAA0B,CACtB9R,IAAK,IAGb,kBAAmB,CACf2F,QAAS,iCAEb,WAAY,CACRnF,QAAS,QAEb,aAAc,CACVR,IAAK,IAGbgF,YAAa,CACTT,gBAAiBpG,EAAMyB,WACvBrC,MAAO,OACPwU,UAAW,qBACXC,SAAU,EACVrM,QAAS,OACTiM,UAAW,MACXK,YAAa,OACbpR,aAAc,GAAF,OAAK1C,MAAAA,GAAL,UAAKA,EAAO+Q,qBAAZ,aAAK,EAAsBrO,aAA3B,OAEhBqR,YAAa,CACTzB,SAAU,WACVF,WAAY,IACZ7Q,MAAOvB,EAAMqS,QACb7K,QAAS,MACT+L,cAAe,aACfE,UAAW,QAEfO,eAAgB,CACZ1B,SAAU,YACVF,WAAY,IACZ7Q,MAAOvB,EAAM+S,kBACbQ,cAAe,cAEnBU,aAAc,CACV1M,OAAQ,UACR7E,aAAc,OAElBwR,YAAa,CACT9U,MAAO,OACPwD,OAAQ,OACR0P,SAAU,QAEd6B,aAAc,CACV/U,MAAO,OACPwD,OAAQ,OACR0P,SAAU,UAEd8B,YAAa,CACThV,MAAO,OACPwD,OAAQ,OACR0P,SAAU,W,qkBCzBtB,SAzFqB,SAACvB,GAClB,IAEMsD,EAAc,CAChBC,OAHUA,EAIVjC,QAJUiC,EAIKC,QACfC,MALUF,EAKGE,MACbC,kBANUH,EAMeE,MACzB/S,WAPU6S,EAOQI,aAClBrB,gBARUiB,EAQaK,QACvB5B,kBATUuB,EASeX,QACzBd,SAVUyB,EAUMC,QAChBK,aAXUN,EAWUO,cACpBC,iBAZUR,EAYcS,eACxBtS,QAbU6R,EAaKU,QACfjE,cAAAA,GAGEvO,EC5BK,SAAsBxC,GAAO,sEACxC,MAAO,CACHqE,KAAMrE,MAAAA,GAAF,UAAEA,EAAO+Q,qBAAT,aAAE,EAAsBkE,QAC5BC,OAAQ,CACJC,MAAK,UAAEnV,EAAMsU,cAAR,aAAE,EAAcc,WAEzB3N,QAAS,CACLC,MAAK,UAAE1H,EAAMsU,cAAR,aAAE,EAAcI,aACrBW,KAAI,UAAErV,EAAMsU,cAAR,aAAE,EAAcgB,YACpBC,KAAI,UAAEvV,EAAMsU,cAAR,aAAE,EAAckB,YACpB,cAAKxV,EAAMsU,cAAX,aAAK,EAAcmB,WACnB,cAAKzV,EAAMsU,cAAX,aAAK,EAAcoB,YAEvBC,UAAW,CACPjO,MAAK,UAAE1H,EAAMsU,cAAR,aAAE,EAAcS,eACrBM,KAAI,UAAErV,EAAMsU,cAAR,aAAE,EAAcsB,cACpBL,KAAI,UAAEvV,EAAMsU,cAAR,aAAE,EAAcO,cACpB,cAAK7U,EAAMsU,cAAX,aAAK,EAAcuB,aACnB,cAAK7V,EAAMsU,cAAX,aAAK,EAAcwB,cAEvBlV,MAAO,CACH8G,MAAK,UAAE1H,EAAMsU,cAAR,aAAE,EAAcyB,WACrBV,KAAI,UAAErV,EAAMsU,cAAR,aAAE,EAAc0B,UACpBT,KAAI,UAAEvV,EAAMsU,cAAR,aAAE,EAAc2B,WAExBC,OAAQ,CACJxO,MAAK,UAAE1H,EAAMsU,cAAR,aAAE,EAAc6B,YACrBd,KAAI,UAAErV,EAAMsU,cAAR,aAAE,EAAc8B,WACpBb,KAAI,UAAEvV,EAAMsU,cAAR,aAAE,EAAc+B,YAExBvV,QAAS,CACL4G,MAAK,UAAE1H,EAAMsU,cAAR,aAAE,EAAcgC,aACrBjB,KAAI,UAAErV,EAAMsU,cAAR,aAAE,EAAciC,YACpBhB,KAAI,UAAEvV,EAAMsU,cAAR,aAAE,EAAckC,aAExBzV,QAAS,CACL2G,MAAK,UAAE1H,EAAMsU,cAAR,aAAE,EAAcmC,aACrB,cAAKzW,EAAMsU,cAAX,aAAK,EAAcoC,WACnBrB,KAAI,UAAErV,EAAMsU,cAAR,aAAE,EAAcqC,YACpBpB,KAAI,UAAEvV,EAAMsU,cAAR,aAAE,EAAcsC,aAExBxS,KAAM,CACF,aAAIpE,EAAMsU,cAAV,aAAI,EAAcuC,OAClB,cAAK7W,EAAMsU,cAAX,aAAK,EAAcwC,QACnB,IAAK9W,EAAM+S,kBACX,IAAK/S,EAAMqS,QACX,IAAKrS,EAAMqT,gBACX,IAAKrT,EAAM6S,UAEf0C,KAAM,CACF7N,MAAK,UAAE1H,EAAMsU,cAAR,aAAE,EAAcjB,gBACrBgC,KAAI,UAAErV,EAAMsU,cAAR,aAAE,EAAcyC,WACpBxB,KAAI,UAAEvV,EAAMsU,cAAR,aAAE,EAAc0C,WACpB,cAAKhX,EAAMsU,cAAX,aAAK,EAAc2C,eACnB,cAAKjX,EAAMsU,cAAX,aAAK,EAAcc,WAEvB8B,KAAM,CACFzP,QAASzH,EAAMqT,gBACfsC,UAAW3V,EAAM+S,kBACjBwC,KAAMvV,EAAM6S,SACZsE,KAAI,UAAEnX,EAAMsU,cAAR,aAAE,EAAcwC,SAExBrV,WAAY,CACR+S,MAAOxU,EAAMwU,MACb4C,QAASpX,EAAMyU,oBDpCP4C,CAAahD,GAEvBiD,EAAS,CACX1U,OAAQ,GACR4E,QAAS,SAGP+P,EAAe,CACjBC,UAAW,MACXhV,QAAAA,EACA7B,KAAM,CACFC,MAAO,OACA0W,GADF,IAED/V,MAAOiB,EAAQ0T,OAAOX,KACtBnP,gBAAiB5D,EAAQ0T,OAAOxO,QAEpC5G,QAAS,OACFwW,GADA,IAEH/V,MAAOiB,EAAQ1B,QAAQyU,KACvBnP,gBAAiB5D,EAAQ1B,QAAQ4G,QAErC3G,QAAS,CACLQ,MAAOiB,EAAQzB,QAAQwU,KACvBnP,gBAAiB5D,EAAQzB,QAAQ2G,MACjC9E,OAAQ,KAGhB6U,OAAQ,CACJC,QAAS,CACL9D,UAAW,OACXpM,QAAS,MACT,4BAA6B,CACzBoM,UAAW,UAIvBhN,WAAYqL,EAAgBoC,IAG1BsD,GAASC,EAAAA,EAAAA,GAAYL,GA6B3B,OA5BAI,EAAOE,WEzEI,SAAiC7X,GAAO,8BAC7C8X,EAAO,UAAG9X,EAAMsU,cAAT,aAAG,EAAcuC,OAC9B,MAAO,CACHkB,UAAW,CACPC,eAAgB,CACZC,KAAM,CACF7F,WAAY,IACZ1P,aAAc,SAI1BwV,SAAU,CACNC,aAAc,CACVC,UAAW,GAEfJ,eAAgB,CACZC,KAAM,CACFI,gBAAiB,QAErBC,QAAS,CACL5V,aAAc,GAAF,OAAK1C,MAAAA,GAAL,UAAKA,EAAO+Q,qBAAZ,aAAK,EAAsBrO,aAA3B,SAIxB6V,cAAe,CACXP,eAAgB,CACZC,KAAM,CACF1W,MAAK,UAAEvB,EAAMsU,cAAR,aAAE,EAAczB,SACrBrL,QAAS,QAEb5D,MAAO,CACH0O,SAAU,cAItBkG,eAAgB,CACZR,eAAgB,CACZC,KAAM,CACFzQ,QAAS,UAIrBiR,eAAgB,CACZT,eAAgB,CACZC,KAAM,CACFzQ,QAAS,UAIrBkR,kBAAmB,CACfV,eAAgB,CACZC,KAAM,CACF1W,MAAOvB,EAAMqT,gBACbrK,WAAY,OACZ2P,cAAe,OACf,iBAAkB,CACdpX,MAAOvB,EAAM4U,aACbxO,gBAAiBpG,EAAM8U,iBACvB,UAAW,CACP1O,gBAAiBpG,EAAM8U,kBAE3B,0BAA2B,CACvBvT,MAAOvB,EAAM4U,eAGrB,UAAW,CACPxO,gBAAiBpG,EAAM8U,iBACvBvT,MAAOvB,EAAM4U,aACb,0BAA2B,CACvBrT,MAAOvB,EAAM4U,kBAMjCgE,gBAAiB,CACbZ,eAAgB,CACZC,KAAM,CACF1W,MAAOvB,EAAMqT,gBACblO,SAAU,UAItB0T,gBAAiB,CACbb,eAAgB,CACZvQ,QAAS,CACLlG,MAAOvB,EAAM6S,YAIzBiG,aAAc,CACVd,eAAgB,CACZe,MAAO,CACHxX,MAAOvB,EAAM6S,SACb,iBAAkB,CACdtR,MAAOvB,EAAM+S,kBACbT,SAAU,eAK1B0G,iBAAkB,CACdhB,eAAgB,CACZC,KAAM,CACFxW,WAAYqW,EACZpV,aAAc,GAAF,OAAK1C,MAAAA,GAAL,UAAKA,EAAO+Q,qBAAZ,aAAK,EAAsBrO,aAA3B,MACZ,qCAAsC,CAClCuW,YAAW,UAAEjZ,EAAMsU,cAAR,aAAE,EAAc4E,SAE/B,0BAA2B,CACvBD,YAAW,UAAEjZ,EAAMsU,cAAR,aAAE,EAAcI,cAE/B,2BAA4B,CACxBlN,QAAS,IAGjBuR,MAAO,CACH3G,WAAY,IACZ3Q,WAAYqW,EACZtQ,QAAS,cACT9E,aAAc,GAAF,OAAK1C,MAAAA,GAAL,UAAKA,EAAO+Q,qBAAZ,aAAK,EAAsBrO,aAA3B,MACZ,gCAAiC,CAC7B8E,QAAS,YACT,mCAAoC,CAChC2R,YAAa,KAIzBC,kBAAmB,CACfD,YAAa,GAEjBE,eAAgB,CACZ3W,aAAc,GAAF,OAAK1C,MAAAA,GAAL,UAAKA,EAAO+Q,qBAAZ,aAAK,EAAsBrO,aAA3B,SAIxB4W,UAAW,CACPtB,eAAgB,CACZC,KAAM,CACF,iBAAkB,CACd1W,MAAK,UAAEvB,EAAMsU,cAAR,aAAE,EAAciF,UAG7BC,KAAM,CACFpT,gBAAiBpG,EAAMwU,MACvBpV,MAAO,OAEXqa,WAAY,CACRlY,MAAOvB,MAAAA,GAAF,UAAEA,EAAOsU,cAAT,aAAE,EAAeI,gBAIlCgF,WAAY,CACR1B,eAAgB,CACZC,KAAM,CACFgB,YAAajZ,EAAMyC,QACnBkX,QAAS,KAIrBC,UAAW,CACP5B,eAAgB,CACZC,KAAM,CACF1W,MAAK,UAAEvB,EAAMsU,cAAR,aAAE,EAAckB,YACrB/T,WAAU,UAAEzB,EAAMsU,cAAR,aAAE,EAAcmB,cAItCoE,QAAS,CACL7B,eAAgB,CACZC,KAAM,CACF,0CAA2C,CACvC1W,MAAO,cAKvBuY,WAAY,CACR9B,eAAgB,CACZ+B,QAAS,CACLxY,MAAOvB,EAAMwU,MACb/S,WAAU,UAAEzB,EAAMsU,cAAR,aAAE,EAAcK,YF5GtBqF,CAAwB3F,GA4BrCsD,GG9EX,SAfY,WACR,IAAM5G,GAAgBkJ,EAAAA,EAAAA,KAAY,SAAChK,GAAD,OAAWA,EAAMc,iBAEnD,OACI,gBAACmJ,EAAA,EAAD,CAAsBC,aAAW,GAC7B,gBAACC,EAAA,EAAD,CAAepa,MAAO2X,GAAO5G,IACzB,gBAACsJ,EAAA,GAAD,MACA,gBAAC,KAAD,KACI,gBAAC,EAAD,UCNpB,IAAMC,IAAYC,EAAAA,EAAAA,IAAa/I,GAE/BA,EAAMgJ,WAAU,kBAAMC,QAAQC,IAAIlJ,EAAMmJ,eACxC,IAAMC,GACF,gBAAC,KAAD,CAAUpJ,MAAOA,GACb,gBAAC,IAAD,CAAaqJ,QAAS,KAAMP,UAAWA,IACnC,gBAAC,KAAD,KACI,gBAAC,GAAD,SAMVQ,GAAYC,SAASC,eAAe,OAE1CC,EAAAA,OAAgBL,GAASE,M","sources":["webpack://new_react_lending/./src/components/table/index.jsx","webpack://new_react_lending/./src/components/loader/index.jsx","webpack://new_react_lending/./src/components/loadable/index.jsx","webpack://new_react_lending/./src/components/buttonsBoxRow/index.jsx","webpack://new_react_lending/./src/components/datePicker/index.jsx","webpack://new_react_lending/./src/components/modal/index.jsx","webpack://new_react_lending/./src/components/spinner/index.jsx","webpack://new_react_lending/./src/components/newDataTable/index.jsx","webpack://new_react_lending/./src/containers/layouts/index.jsx","webpack://new_react_lending/./src/containers/lists/notificationList.jsx","webpack://new_react_lending/./src/core/menu/firstNavCard.js","webpack://new_react_lending/./src/core/menu/secondNavCard.js","webpack://new_react_lending/./src/containers/navigation/navScroll.jsx","webpack://new_react_lending/./src/containers/modals/paymentSchedule.jsx","webpack://new_react_lending/./src/core/helpers/changeDataStructure.js","webpack://new_react_lending/./src/core/helpers/headLines.js","webpack://new_react_lending/./src/core/services/agencyAgreementActions.js","webpack://new_react_lending/./src/core/services/bondActions.js","webpack://new_react_lending/./src/core/services/clientList.js","webpack://new_react_lending/./src/core/services/dictionaries.js","webpack://new_react_lending/./src/core/services/handleErrors.js","webpack://new_react_lending/./src/core/store/alerts/actions.js","webpack://new_react_lending/./src/core/store/alerts/constants.js","webpack://new_react_lending/./src/core/store/constructors/actions.js","webpack://new_react_lending/./src/core/store/constructors/constants.js","webpack://new_react_lending/./src/core/store/lists/actions.js","webpack://new_react_lending/./src/core/store/lists/constants.js","webpack://new_react_lending/external var \"{\\\"apiUrl\\\":\\\"http://192.168.11.76:5000\\\"}\"","webpack://new_react_lending/./src/core/utils/request.js","webpack://new_react_lending/./src/core/store/customization/reducer.js","webpack://new_react_lending/./src/core/store/customization/constants.js","webpack://new_react_lending/./src/core/store/lists/reducer.js","webpack://new_react_lending/./src/core/store/alerts/reducer.js","webpack://new_react_lending/./src/core/store/constructors/reducer.js","webpack://new_react_lending/./src/core/store/rootReducer.js","webpack://new_react_lending/./src/core/store/index.js","webpack://new_react_lending/./src/routes.js","webpack://new_react_lending/./src/assets/scss/_themes-vars.module.scss?5dd0","webpack://new_react_lending/./src/core/themes/typography.js","webpack://new_react_lending/./src/core/themes/index.js","webpack://new_react_lending/./src/core/themes/palette.js","webpack://new_react_lending/./src/core/themes/compStyleOverride.js","webpack://new_react_lending/./src/App.js","webpack://new_react_lending/./src/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Box, Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, Paper, Checkbox, Chip, Grid } from '@mui/material';\r\nimport { cacheOfDictionaries } from '@/core/services/dictionaries';\r\nimport { stableSort, getComparator } from '@/core/utils/array';\r\nimport { NewDataTable } from '@/components';\r\nimport EnhancedTableHead from './tableHead';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\nconst map = new Map();\r\nmap.set('date', (item) => new Date(item).toLocaleDateString('ru'))\r\n    .set('dateTime', (item) => `${new Date(item).toLocaleDateString('ru')}  -  ${new Date(item).toLocaleTimeString('ru')}`)\r\n    .set('currency', (item) => cacheOfDictionaries.get('currencies')?.find((obj) => obj.id === item).name)\r\n    .set('paymentSettingType', (item) => cacheOfDictionaries.get('paymentSettingTypes')?.find((obj) => obj.key === item).displayName)\r\n    .set('issueRate', (item) => Number(item)?.toFixed(2) || '---')\r\n    .set('isTrue', (item) => (item ? 'Да' : 'Нет'))\r\n    .set('content', (item) => <div style={{ width: 'max-content' }}>{item}</div>)\r\n    .set(undefined, (item) => item);\r\n\r\nfunction EnhancedTable(props) {\r\n    const {\r\n        headCells,\r\n        rows,\r\n        changeStyle,\r\n        isActive,\r\n        selected,\r\n        handleSelectAllTableRows,\r\n        handleSelectTableRow,\r\n        isRowNotClickable,\r\n        children\r\n    } = props;\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState(headCells[0].id);\r\n    const [orderByType, setOrderByType] = useState(headCells[0].type);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(25);\r\n    const [isOpenSearch, setIsOpenSearch] = useState({ id: null, open: false });\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    const searching = {\r\n        isOpenSearch,\r\n        searchText,\r\n        handleIsOpenSearch: (id) => {\r\n            setIsOpenSearch({ id, open: true });\r\n        },\r\n        closeSearchInput: () => {\r\n            setIsOpenSearch({ id: null, open: false });\r\n            setSearchText('');\r\n        },\r\n        handleSerachText: (e) => setSearchText(e.target.value)\r\n    };\r\n\r\n    const handleRequestSort = (event, property, type) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n        setOrderByType(type);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleViewRowData = (e, id) => {\r\n        if (e.target.tagName === 'TD' || e.target.tagName === 'DIV') {\r\n            navigate(`${id}`);\r\n        }\r\n    };\r\n\r\n    const handleCheckboxRowData = (e, id, data) => {\r\n        e.stopPropagation();\r\n        handleSelectTableRow(e, id, data);\r\n    };\r\n\r\n    const isSelected = (id) => {\r\n        if (Array.isArray(selected)) {\r\n            return selected.indexOf(id) !== -1;\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    const getStatusView = (item, dictionary) => {\r\n        const findStatusObject = cacheOfDictionaries.get(dictionary)?.find((obj) => obj.key === item);\r\n        let chip = theme.chip.error;\r\n        switch (findStatusObject?.value) {\r\n            case 'AwaitFinCoreCancel':\r\n            case 'Waiting':\r\n            case 'AwaitForMoneySend':\r\n                chip = theme.chip.warning;\r\n                break;\r\n            case 'Approved':\r\n            case 'Signed':\r\n                chip = theme.chip.success;\r\n                break;\r\n            default:\r\n                chip = theme.chip.error;\r\n        }\r\n\r\n        return <Chip label={`${findStatusObject?.displayName || ''}`} sx={chip} />;\r\n    };\r\n\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    map.set('contractActionStatuses', (item) => getStatusView(item, 'contractActionStatuses'))\r\n        .set('paymentOrderStatuses', (item) => getStatusView(item, 'paymentOrderStatuses'))\r\n        .set('status', (item) => getStatusView(item, 'statuses'))\r\n        .set('isActive', (item) => {\r\n            let colorItem = '';\r\n            if ((+item > 0 && isActive) || (+item < 0 && !isActive)) {\r\n                colorItem = 'red';\r\n            }\r\n            return <div style={{ color: colorItem }}>{item}</div>;\r\n        });\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Paper sx={{ width: '100%', mb: 2, background: changeStyle ? '#e3f2fd' : '' }}>\r\n                {children}\r\n                {/* <TableContainer style={changeStyle ? { borderRadius: '4px' } : { borderRadius: '0px' }}> */}\r\n                <NewDataTable />\r\n                {/* <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\" size=\"medium\">\r\n                        <EnhancedTableHead\r\n                            numSelected={selected?.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllTableRows}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                            headCells={headCells}\r\n                            searching={searching}\r\n                            changeStyle={changeStyle}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy, orderByType))\r\n                                .filter((item) => {\r\n                                    if (orderByType === 'status') {\r\n                                        const findStatusObject = cacheOfDictionaries\r\n                                            .get('statuses')\r\n                                            ?.find((obj) => obj.key === item[isOpenSearch.id]);\r\n                                        return findStatusObject\r\n                                            ? findStatusObject.displayName.includes(searchText)\r\n                                            : String(item[isOpenSearch.id]).includes(searchText);\r\n                                    }\r\n                                    if (orderByType === 'contractActionStatuses' || orderByType === 'paymentOrderStatuses') {\r\n                                        const findStatusObject = cacheOfDictionaries\r\n                                            .get(orderByType)\r\n                                            ?.find((obj) => obj.key === item[isOpenSearch.id]);\r\n                                        return findStatusObject\r\n                                            ? findStatusObject.displayName.includes(searchText)\r\n                                            : String(item[isOpenSearch.id]).includes(searchText);\r\n                                    }\r\n                                    if (orderByType === 'date') {\r\n                                        return String(new Date(item[isOpenSearch.id]).toLocaleDateString('ru')).includes(searchText);\r\n                                    }\r\n                                    return String(item[isOpenSearch.id]).includes(searchText);\r\n                                })\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.id);\r\n                                    const labelId = `enhanced-table-checkbox-${row.id}`;\r\n                                    return Array.isArray(selected) ? (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) =>\r\n                                                isRowNotClickable\r\n                                                    ? handleCheckboxRowData(event, row.id, row)\r\n                                                    : handleViewRowData(event, row.id)\r\n                                            }\r\n                                            key={row.id}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\" style={{ width: '50px' }}>\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{\r\n                                                        'aria-labelledby': labelId\r\n                                                    }}\r\n                                                    onChange={(event) => handleCheckboxRowData(event, row.id, row)}\r\n                                                />\r\n                                            </TableCell>\r\n                                            {headCells.map((cell, index) => (\r\n                                                <TableCell align=\"center\" key={cell.id}>\r\n                                                    {map.get(cell.type)(row[cell.id])}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                        </TableRow>\r\n                                    ) : (\r\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\r\n                                            {headCells.map((cell, index) => (\r\n                                                <TableCell align=\"center\" key={cell.id}>\r\n                                                    {map.get(cell.type)(row[cell.id])}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: 53 * emptyRows\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table> */}\r\n                {/* </TableContainer> */}\r\n                {/* <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                /> */}\r\n            </Paper>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default EnhancedTable;\r\n","import React from 'react';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst LoaderWrapper = styled('div')({\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 1301,\r\n    width: '100%'\r\n});\r\n\r\nfunction Loader() {\r\n    return (\r\n        <LoaderWrapper>\r\n            <LinearProgress color=\"primary\" />\r\n        </LoaderWrapper>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Suspense } from 'react';\r\nimport Loader from '../loader';\r\n\r\nfunction Loadable(Component) {\r\n    return function (props) {\r\n        return (\r\n            <Suspense fallback={<Loader />}>\r\n                <Component {...props} />\r\n            </Suspense>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Loadable;\r\n","import React, { Fragment } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { Box, Divider } from '@mui/material';\r\n\r\nfunction ButtonsBoxRow(props) {\r\n    const { children } = props;\r\n    const len = children && children.length ? children.length - 1 : 0;\r\n\r\n    function getMultiChildrens() {\r\n        return children.map((el, index) => (\r\n            <Fragment key={nanoid(8)}>\r\n                {el}\r\n                {len !== index && <Divider orientation=\"vertical\" variant=\"large\" flexItem />}\r\n            </Fragment>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                width: 'fit-content',\r\n                border: (theme) => `1px solid ${theme.palette.divider}`,\r\n                borderRadius: 1,\r\n                bgcolor: 'background.paper',\r\n                color: 'text.secondary',\r\n                height: '100%',\r\n                p: 1.5,\r\n                '& hr': {\r\n                    mx: 1.5\r\n                }\r\n            }}\r\n        >\r\n            {len === 0 ? children : getMultiChildrens()}\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ButtonsBoxRow;\r\n","import React from 'react';\r\nimport frLocale from 'date-fns/locale/fr';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport deLocale from 'date-fns/locale/de';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport TextField from '@mui/material/TextField';\r\nimport { DatePicker, LocalizationProvider } from '@mui/lab';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\n\r\nconst localeMap = {\r\n    en: enLocale,\r\n    fr: frLocale,\r\n    ru: ruLocale,\r\n    de: deLocale\r\n};\r\n\r\nconst maskMap = {\r\n    fr: '__/__/____',\r\n    en: '__/__/____',\r\n    ru: '__.__.____',\r\n    de: '__.__.____'\r\n};\r\n\r\nfunction LocalizedDatePicker(props) {\r\n    const { dateValue, onChange, isDisabled, label = '' } = props;\r\n    const [locale, setLocale] = React.useState('ru');\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={localeMap[locale]}>\r\n            <DatePicker\r\n                label={label}\r\n                mask={maskMap[locale]}\r\n                value={dateValue}\r\n                onChange={onChange}\r\n                renderInput={(params) => <TextField {...params} />}\r\n                disabled={isDisabled}\r\n            />\r\n        </LocalizationProvider>\r\n    );\r\n}\r\n\r\nexport default LocalizedDatePicker;\r\n","import React from 'react';\r\nimport ReactModal from 'react-modal-resizable-draggable';\r\nimport './index.scss';\r\n\r\nfunction Modal({ isOpenModal, closeModal, children, title = 'Окно можно переносить', width = 800, height = 600 }) {\r\n    return (\r\n        <div className=\"modal\">\r\n            <ReactModal initWidth={width} initHeight={height} onRequestClose={closeModal} isOpen={isOpenModal}>\r\n                <h3>{title}</h3>\r\n                <br />\r\n                {children}\r\n            </ReactModal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress, { circularProgressClasses } from '@mui/material/CircularProgress';\r\n\r\nfunction Spinner(props) {\r\n    const { newsx } = props;\r\n\r\n    return (\r\n        <Box sx={{ position: 'relative', ...newsx }}>\r\n            <CircularProgress\r\n                variant=\"determinate\"\r\n                sx={{\r\n                    color: (theme) => theme.palette.grey[theme.palette.mode === 'light' ? 100 : 800]\r\n                }}\r\n                size={25}\r\n                thickness={5}\r\n                {...props}\r\n                value={100}\r\n            />\r\n            <CircularProgress\r\n                variant=\"indeterminate\"\r\n                disableShrink\r\n                sx={{\r\n                    color: (theme) => (theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8'),\r\n                    animationDuration: '550ms',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n\r\n                    [`& .${circularProgressClasses.circle}`]: {\r\n                        strokeLinecap: 'round'\r\n                    }\r\n                }}\r\n                size={25}\r\n                thickness={5}\r\n                {...props}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Spinner;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nfunction moreThanZero(params) {\r\n    if (params.value < 0) {\r\n        return 'super-app negative';\r\n    }\r\n    return 'super-app positive';\r\n}\r\n\r\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n});\r\n\r\nconst usdPrice = {\r\n    type: 'number',\r\n    minWidth: 200,\r\n    cellClassName: moreThanZero,\r\n    valueFormatter: ({ value }) => currencyFormatter.format(value)\r\n};\r\nconst columns = [\r\n    { field: 'id', headerName: 'Stock', width: 200, hideable: false },\r\n    {\r\n        field: 'price',\r\n        headerName: 'Price',\r\n        ...usdPrice\r\n    },\r\n    { field: 'stock_of_capital', headerName: 'Stock of capital', ...usdPrice },\r\n    {\r\n        field: 'number_of_persons_employed',\r\n        headerName: 'Number of persons employed',\r\n        type: 'number',\r\n        minWidth: 250,\r\n        cellClassName: moreThanZero\r\n    },\r\n    { field: 'total_money_supply', headerName: 'Total money supply', ...usdPrice },\r\n    {\r\n        field: 'interest_on_capital',\r\n        headerName: 'Interest on capital',\r\n        type: 'number',\r\n        minWidth: 200,\r\n        cellClassName: moreThanZero,\r\n        valueFormatter: (params) => {\r\n            if (!params.value) {\r\n                return '0 %';\r\n            }\r\n\r\n            const valueFormatted = Number(params.value).toLocaleString();\r\n            return `${valueFormatted} %`;\r\n        }\r\n    },\r\n    { field: 'market_cap', headerName: 'Market Cap', ...usdPrice }\r\n    // {\r\n    //     field: 'fullName',\r\n    //     headerName: 'Full name',\r\n    //     description: 'This column has a value getter and is not sortable.',\r\n    //     sortable: false,\r\n    //     width: 160,\r\n    //     valueGetter: (params) => `${params.row.firstName || ''} ${params.row.price: 200,  stock_of_capital: 50000,number_of_persons_employed: 30000,total_money_supply: 4000,interest_on_capital: 6000,market_cap: 114000        || ''}`\r\n    // }\r\n];\r\n\r\nconst rows = [\r\n    {\r\n        id: 'Microsoft',\r\n        price: 15421.25,\r\n        stock_of_capital: 5040,\r\n        number_of_persons_employed: 526000,\r\n        total_money_supply: 15555555555,\r\n        interest_on_capital: 85.36,\r\n        market_cap: 114000415\r\n    },\r\n    {\r\n        id: 'Survey Monkey',\r\n        price: 45655.251,\r\n        stock_of_capital: 84892,\r\n        number_of_persons_employed: 8251,\r\n        total_money_supply: 4825,\r\n        interest_on_capital: 14,\r\n        market_cap: 145256.856\r\n    },\r\n    {\r\n        id: 'Twitter',\r\n        price: 15414,\r\n        stock_of_capital: -50000,\r\n        number_of_persons_employed: 25456,\r\n        total_money_supply: 14525.63,\r\n        interest_on_capital: 16.526,\r\n        market_cap: 147.585\r\n    },\r\n    {\r\n        id: 'Adobe Systems',\r\n        price: 52562,\r\n        stock_of_capital: 14525.45,\r\n        number_of_persons_employed: 48551,\r\n        total_money_supply: 14526,\r\n        interest_on_capital: 14,\r\n        market_cap: 74885.9569595\r\n    },\r\n    {\r\n        id: 'Baidu',\r\n        price: 475555,\r\n        stock_of_capital: -5262.25,\r\n        number_of_persons_employed: 14525,\r\n        total_money_supply: 14526.54,\r\n        interest_on_capital: 74,\r\n        market_cap: 26365.45\r\n    },\r\n    {\r\n        id: 'Hewlett-Packard',\r\n        price: 478556,\r\n        stock_of_capital: 488552.525,\r\n        number_of_persons_employed: 41250,\r\n        total_money_supply: 1425,\r\n        interest_on_capital: 39,\r\n        market_cap: 4858.58\r\n    },\r\n    {\r\n        id: 'Apple',\r\n        price: 14.52,\r\n        stock_of_capital: 74450,\r\n        number_of_persons_employed: 30000,\r\n        total_money_supply: 4524000,\r\n        interest_on_capital: 40,\r\n        market_cap: 4455522222\r\n    },\r\n    {\r\n        id: 'Oracle',\r\n        price: 30525.66,\r\n        stock_of_capital: 485520,\r\n        number_of_persons_employed: 48520,\r\n        total_money_supply: 14525.62,\r\n        interest_on_capital: 6.125,\r\n        market_cap: 47555\r\n    },\r\n    {\r\n        id: 'Lenovo Group',\r\n        price: 12356,\r\n        stock_of_capital: 50.0,\r\n        number_of_persons_employed: 147,\r\n        total_money_supply: 25623,\r\n        interest_on_capital: 78,\r\n        market_cap: 1455266\r\n    },\r\n    {\r\n        id: 'IBM',\r\n        price: 96552,\r\n        stock_of_capital: 4500,\r\n        number_of_persons_employed: 456200,\r\n        total_money_supply: 1262,\r\n        interest_on_capital: 45.25,\r\n        market_cap: 48751\r\n    },\r\n    {\r\n        id: 'Slack Tehnologies',\r\n        price: 34543,\r\n        stock_of_capital: 670,\r\n        number_of_persons_employed: 3760,\r\n        total_money_supply: 4000,\r\n        interest_on_capital: 12.26,\r\n        market_cap: 114000\r\n    },\r\n    {\r\n        id: 'Amazon.com',\r\n        price: 787567,\r\n        stock_of_capital: 576,\r\n        number_of_persons_employed: 3050,\r\n        total_money_supply: 467,\r\n        interest_on_capital: 6,\r\n        market_cap: 6888\r\n    },\r\n    {\r\n        id: 'Cisco Systems',\r\n        price: 4546,\r\n        stock_of_capital: 546,\r\n        number_of_persons_employed: 456,\r\n        total_money_supply: 3356,\r\n        interest_on_capital: 65,\r\n        market_cap: 67846\r\n    },\r\n    {\r\n        id: 'VINCI SA',\r\n        price: 222,\r\n        stock_of_capital: 50000,\r\n        number_of_persons_employed: 30000,\r\n        total_money_supply: 4000,\r\n        interest_on_capital: 14,\r\n        market_cap: 114000\r\n    },\r\n    {\r\n        id: 'Google',\r\n        price: 123,\r\n        stock_of_capital: 23140,\r\n        number_of_persons_employed: 3240,\r\n        total_money_supply: 43434,\r\n        interest_on_capital: 23,\r\n        market_cap: 345435\r\n    },\r\n    {\r\n        id: 'Facebook',\r\n        price: 200,\r\n        stock_of_capital: 540,\r\n        number_of_persons_employed: 4500,\r\n        total_money_supply: 4560,\r\n        interest_on_capital: 20,\r\n        market_cap: 1222\r\n    }\r\n];\r\n\r\nexport default function DataTable() {\r\n    return (\r\n        <Box\r\n            sx={{\r\n                height: 642,\r\n                width: '100%',\r\n                '& .super-app-theme--cell': {\r\n                    backgroundColor: '#fff',\r\n                    display: 'flex',\r\n                    justifyContent: 'left'\r\n                },\r\n                '& .super-app.negative': {\r\n                    backgroundColor: '#d47483',\r\n                    display: 'flex',\r\n                    justifyContent: 'left'\r\n                },\r\n                '& .super-app.positive': {\r\n                    backgroundColor: 'transparent',\r\n                    display: 'flex',\r\n                    justifyContent: 'left'\r\n                }\r\n            }}\r\n        >\r\n            <DataGrid rows={rows} columns={columns} pageSize={10} rowsPerPageOptions={[10]} />\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { Box } from '@mui/material';\r\n\r\nimport { getDictionaries } from '@/core/services/dictionaries';\r\n\r\nimport { styled, useTheme } from '@mui/material/styles';\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(({ theme, open }) => ({\r\n    ...theme.typography.mainContent\r\n}));\r\n\r\nconst MainLayout = () => {\r\n    const theme = useTheme();\r\n    const dispatch = useDispatch();\r\n\r\n    const [isDictionariesRequested, setIsDictionariesRequested] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDictionaries()).then(() => setIsDictionariesRequested(true));\r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <Main theme={theme}>\r\n                <Box display=\"grid\" gridTemplateColumns=\"repeat(12, 1fr)\" gap={5} sx={{ mt: 0 }}>\r\n                    <Outlet />\r\n                </Box>\r\n            </Main>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Chip,\r\n    Divider,\r\n    Grid,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    Stack,\r\n    Typography\r\n} from '@mui/material';\r\nimport { IconBrandTelegram, IconBuildingStore, IconMailbox, IconPhoto } from '@tabler/icons';\r\nimport User1 from '@/assets/images/users/user-round.svg';\r\nimport { useTheme, styled } from '@mui/material/styles';\r\n\r\nconst ListItemWrapper = styled('div')(({ theme }) => ({\r\n    cursor: 'pointer',\r\n    padding: 16,\r\n    '&:hover': {\r\n        background: theme.palette.primary.light\r\n    },\r\n    '& .MuiListItem-root': {\r\n        padding: 0\r\n    }\r\n}));\r\n\r\n// ==============================|| NOTIFICATION LIST ITEM ||============================== //\r\n\r\nconst NotificationList = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <List\r\n            sx={{\r\n                width: '100%',\r\n                maxWidth: 330,\r\n                py: 0,\r\n                borderRadius: '10px',\r\n                [theme.breakpoints.down('md')]: {\r\n                    maxWidth: 300\r\n                },\r\n                '& .MuiListItemSecondaryAction-root': {\r\n                    top: 22\r\n                },\r\n                '& .MuiDivider-root': {\r\n                    my: 0\r\n                },\r\n                '& .list-container': {\r\n                    pl: 7\r\n                }\r\n            }}\r\n        >\r\n            <ListItemWrapper>\r\n                <ListItem alignItems=\"center\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"John Doe\" src={User1} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary=\"John Doe\" />\r\n                    <ListItemSecondaryAction>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                    2 min ago\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Grid container direction=\"column\" className=\"list-container\">\r\n                    <Grid item xs={12} sx={{ pb: 2 }}>\r\n                        <Typography variant=\"subtitle2\">It is a long established fact that a reader will be distracted</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Chip label=\"Unread\" sx={theme.chip.error} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Chip label=\"New\" sx={theme.chip.warning} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </ListItemWrapper>\r\n            <Divider />\r\n            <ListItemWrapper>\r\n                <ListItem alignItems=\"center\">\r\n                    <ListItemAvatar>\r\n                        <Avatar\r\n                            sx={{\r\n                                color: theme.palette.success.dark,\r\n                                backgroundColor: theme.palette.success.light,\r\n                                border: 'none',\r\n                                borderColor: theme.palette.success.main\r\n                            }}\r\n                        >\r\n                            <IconBuildingStore stroke={1.5} size=\"1.3rem\" />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={<Typography variant=\"subtitle1\">Store Verification Done</Typography>} />\r\n                    <ListItemSecondaryAction>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                    2 min ago\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Grid container direction=\"column\" className=\"list-container\">\r\n                    <Grid item xs={12} sx={{ pb: 2 }}>\r\n                        <Typography variant=\"subtitle2\">We have successfully received your request.</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Chip label=\"Unread\" sx={theme.chip.error} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </ListItemWrapper>\r\n            <Divider />\r\n            <ListItemWrapper>\r\n                <ListItem alignItems=\"center\">\r\n                    <ListItemAvatar>\r\n                        <Avatar\r\n                            sx={{\r\n                                color: theme.palette.primary.dark,\r\n                                backgroundColor: theme.palette.primary.light,\r\n                                border: 'none',\r\n                                borderColor: theme.palette.primary.main\r\n                            }}\r\n                        >\r\n                            <IconMailbox stroke={1.5} size=\"1.3rem\" />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={<Typography variant=\"subtitle1\">Check Your Mail.</Typography>} />\r\n                    <ListItemSecondaryAction>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                    2 min ago\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Grid container direction=\"column\" className=\"list-container\">\r\n                    <Grid item xs={12} sx={{ pb: 2 }}>\r\n                        <Typography variant=\"subtitle2\">All done! Now check your inbox as you&apos;re in for a sweet treat!</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" disableElevation endIcon={<IconBrandTelegram stroke={1.5} size=\"1.3rem\" />}>\r\n                                    Mail\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </ListItemWrapper>\r\n            <Divider />\r\n            <ListItemWrapper>\r\n                <ListItem alignItems=\"center\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"John Doe\" src={User1} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={<Typography variant=\"subtitle1\">John Doe</Typography>} />\r\n                    <ListItemSecondaryAction>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                    2 min ago\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Grid container direction=\"column\" className=\"list-container\">\r\n                    <Grid item xs={12} sx={{ pb: 2 }}>\r\n                        <Typography component=\"span\" variant=\"subtitle2\">\r\n                            Uploaded two file on &nbsp;\r\n                            <Typography component=\"span\" variant=\"h6\">\r\n                                21 Jan 2020\r\n                            </Typography>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Card\r\n                                    sx={{\r\n                                        backgroundColor: theme.palette.secondary.light\r\n                                    }}\r\n                                >\r\n                                    <CardContent>\r\n                                        <Grid container direction=\"column\">\r\n                                            <Grid item xs={12}>\r\n                                                <Stack direction=\"row\" spacing={2}>\r\n                                                    <IconPhoto stroke={1.5} size=\"1.3rem\" />\r\n                                                    <Typography variant=\"subtitle1\">demo.jpg</Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </ListItemWrapper>\r\n            <Divider />\r\n            <ListItemWrapper>\r\n                <ListItem alignItems=\"center\">\r\n                    <ListItemAvatar>\r\n                        <Avatar alt=\"John Doe\" src={User1} />\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={<Typography variant=\"subtitle1\">John Doe</Typography>} />\r\n                    <ListItemSecondaryAction>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                                    2 min ago\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Grid container direction=\"column\" className=\"list-container\">\r\n                    <Grid item xs={12} sx={{ pb: 2 }}>\r\n                        <Typography variant=\"subtitle2\">It is a long established fact that a reader will be distracted</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Chip label=\"Confirmation of Account.\" sx={theme.chip.success} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </ListItemWrapper>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default NotificationList;\r\n","import { IconUsers, IconFileLike } from '@tabler/icons';\r\n\r\nconst icons = { IconUsers, IconFileLike };\r\n\r\nconst firstNavCard = {\r\n    id: 'firstNavCard',\r\n    type: 'group',\r\n    children: [\r\n        {\r\n            id: 'clients',\r\n            title: 'Клиенты',\r\n            type: 'item',\r\n            url: '/clients',\r\n            icon: icons.IconUsers,\r\n            breadcrumbs: false\r\n        },\r\n        {\r\n            id: 'agencyAgreements',\r\n            title: 'Агентские соглашения',\r\n            type: 'item',\r\n            url: '/agency-agreements',\r\n            icon: icons.IconFileLike,\r\n            breadcrumbs: false\r\n        }\r\n    ]\r\n};\r\n\r\nexport default firstNavCard;\r\n","// assets\r\nimport { IconKey, IconFileAnalytics, IconMessages, IconUserCheck, IconBook, IconNotebook, IconFileReport } from '@tabler/icons';\r\n\r\n// constant\r\nconst icons = {\r\n    IconKey,\r\n    IconFileAnalytics,\r\n    IconMessages,\r\n    IconUserCheck,\r\n    IconBook,\r\n    IconNotebook,\r\n    IconFileReport\r\n};\r\n\r\n// ==============================|| EXTRA PAGES MENU ITEMS ||============================== //\r\n\r\nconst secondNavCard = {\r\n    id: 'secondNavCard',\r\n    type: 'group',\r\n    children: [\r\n        {\r\n            id: 'contracts',\r\n            title: 'Договоры',\r\n            type: 'collapse',\r\n            icon: icons.IconFileAnalytics,\r\n\r\n            children: [\r\n                {\r\n                    id: 'deposit-agreements',\r\n                    title: 'Договора займа (P2P)',\r\n                    type: 'item',\r\n                    url: '/contracts/deposit-agreements',\r\n                    target: false\r\n                },\r\n                {\r\n                    id: 'bond-issue',\r\n                    title: 'Эмиссии облигаций',\r\n                    type: 'item',\r\n                    url: '/contracts/bond-issue',\r\n                    target: false\r\n                },\r\n                {\r\n                    id: 'bond-agreements',\r\n                    title: 'Договора по облигациям',\r\n                    type: 'item',\r\n                    url: '/contracts/bond-agreements',\r\n                    target: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'records',\r\n            title: 'Проводки',\r\n            type: 'collapse',\r\n            icon: icons.IconMessages,\r\n\r\n            children: [\r\n                {\r\n                    id: 'order-list',\r\n                    title: 'Список ордеров',\r\n                    type: 'item',\r\n                    url: '/records/order-list',\r\n                    target: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'administration',\r\n            title: 'Администрирование',\r\n            type: 'collapse',\r\n            icon: icons.IconUserCheck,\r\n            children: [\r\n                {\r\n                    id: 'login1',\r\n                    title: 'В разработке',\r\n                    type: 'item',\r\n                    url: '/administration',\r\n                    target: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'handbook',\r\n            title: 'Справочники',\r\n            type: 'collapse',\r\n            icon: icons.IconBook,\r\n\r\n            children: [\r\n                {\r\n                    id: 'interest-rates',\r\n                    title: 'Процентные ставки',\r\n                    type: 'item',\r\n                    url: '/handbook/interest-rates',\r\n                    target: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'accounting-core',\r\n            title: 'Учетное ядро',\r\n            type: 'collapse',\r\n            icon: icons.IconNotebook,\r\n\r\n            children: [\r\n                {\r\n                    id: 'login1',\r\n                    title: 'В разработке',\r\n                    type: 'item',\r\n                    url: '/accounting-core',\r\n                    target: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 'reports',\r\n            title: 'Отчеты',\r\n            type: 'collapse',\r\n            icon: icons.IconFileReport,\r\n\r\n            children: [\r\n                {\r\n                    id: 'login1',\r\n                    title: 'В разработке',\r\n                    type: 'item',\r\n                    url: '/reports',\r\n                    target: false\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nexport default secondNavCard;\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst NavigationScroll = ({ children }) => {\r\n    const location = useLocation();\r\n    const { pathname } = location;\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    }, [pathname]);\r\n\r\n    return children || null;\r\n};\r\n\r\nexport default NavigationScroll;\r\n","import React, { useEffect } from 'react';\r\nimport { Box, Button } from '@mui/material';\r\nimport { Loader, Table, Modal } from '@/components';\r\nimport { headCellsPaymentSchedule } from '@/core/helpers/headLines';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction ModalPaymentSchedule({\r\n    commonStates,\r\n    commonHandlers,\r\n    reloadPage = null,\r\n    contractPaymentSchedule = null,\r\n    title = 'График выплат'\r\n}) {\r\n    useEffect(() => {\r\n        if (commonStates.isOpenPaymentSchedule === true) {\r\n            reloadPage?.();\r\n        }\r\n    }, [commonStates.isOpenPaymentSchedule]);\r\n\r\n    return (\r\n        <Modal\r\n            isOpenModal={commonStates.isOpenPaymentSchedule}\r\n            closeModal={commonHandlers.handleIsOpenPaymentSchedule}\r\n            title={title}\r\n            width={1000}\r\n            height={800}\r\n        >\r\n            <Box gridColumn=\"span 12\">\r\n                <div style={{ display: 'flex', justifyContent: 'right', paddingTop: '10px' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<CloseIcon />}\r\n                        sx={{ maxHeight: '35px' }}\r\n                        onClick={commonHandlers.handleIsOpenPaymentSchedule}\r\n                    >\r\n                        Закрыть\r\n                    </Button>\r\n                </div>\r\n                <Table headCells={headCellsPaymentSchedule} rows={contractPaymentSchedule || commonStates.contractPaymentSchedule} />\r\n            </Box>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalPaymentSchedule;\r\n","import { cacheOfDictionaries } from '@/core/services/dictionaries';\r\n\r\nfunction changeContractRatesAndAccounts(payload) {\r\n    if (payload) {\r\n        const contractRates = payload?.contractRates?.map((item) => ({\r\n            ...item,\r\n            daysInMonthText: cacheOfDictionaries.get('daysInMonth')?.find((days) => item.daysInMonth === days.key)?.displayName || ''\r\n        }));\r\n\r\n        const accounts = payload?.accounts?.map((item) => {\r\n            const planId = cacheOfDictionaries.get('accountPlans')?.find((acc) => item.accountPlanId === acc.id);\r\n            return {\r\n                ...item,\r\n                accountSettingText: cacheOfDictionaries.get('accountSettings')?.find((acc) => item.accountSettingId === acc.id)?.name || '',\r\n                accountPlanCode: `${planId?.code || ''}`,\r\n                accountPlanText: `${planId?.name || ''}`\r\n            };\r\n        });\r\n\r\n        return { ...payload, contractRates, accounts };\r\n    }\r\n    return payload;\r\n}\r\n\r\nfunction changeDepositPaymentSchedule(contractPaymentSchedule) {\r\n    if (contractPaymentSchedule) {\r\n        const contractPaymentScheduleNew = contractPaymentSchedule?.map((item) => ({\r\n            ...item,\r\n            paymentSettingText:\r\n                cacheOfDictionaries.get('paymentSettingTypes')?.find((prop) => prop.key === item.paymentSettingId)?.displayName || '',\r\n            statusText: cacheOfDictionaries.get('depositScheduleStatuses')?.find((prop) => prop.key === item.status)?.displayName || ''\r\n        }));\r\n\r\n        return contractPaymentScheduleNew;\r\n    }\r\n    return contractPaymentSchedule;\r\n}\r\n\r\nfunction changeAccountRecords(accountRecordsList) {\r\n    if (accountRecordsList && accountRecordsList?.length > 0) {\r\n        const accountRecordsNewList = accountRecordsList.map((item) => {\r\n            const debitText = item.incomingBalance > item.outgoingBalance ? (item.incomingBalance - item.outgoingBalance).toFixed(2) : '';\r\n            const creditText = item.outgoingBalance > item.incomingBalance ? (item.outgoingBalance - item.incomingBalance).toFixed(2) : '';\r\n            return {\r\n                ...item,\r\n                debitText,\r\n                creditText,\r\n                businessOperationSettingText:\r\n                    cacheOfDictionaries.get('businessOperationSettings')?.find((prop) => prop.id === item.businessOperationSettingId)\r\n                        ?.name || ''\r\n            };\r\n        });\r\n\r\n        return accountRecordsNewList;\r\n    }\r\n    return accountRecordsList;\r\n}\r\n\r\nfunction changeDepositList(depositList, clientList) {\r\n    if (depositList && depositList?.length > 0) {\r\n        const isCorrectRate = (contractRate) => {\r\n            if (contractRate && contractRate.rate && contractRate.daysInYear) {\r\n                return `${contractRate.rate}% ${contractRate.daysInYear} дней в году`;\r\n            }\r\n            return '---';\r\n        };\r\n\r\n        const depositListNew = depositList.map((item) => ({\r\n            ...item,\r\n            clientFio: clientList?.list?.find((prop) => prop.id === item.clientId)?.fio || '---',\r\n            contractRateText: isCorrectRate(item?.contractRate)\r\n        }));\r\n\r\n        return depositListNew;\r\n    }\r\n    return depositList;\r\n}\r\n\r\nfunction changeBondIssueList(bondIssueList, clientList) {\r\n    if (bondIssueList && bondIssueList?.length > 0) {\r\n        const bondIssueListNew = bondIssueList.map((item) => ({\r\n            ...item,\r\n            emitent: clientList?.list?.find((prop) => prop.id === item.clientId)?.fullName || '---',\r\n            currencyText: cacheOfDictionaries.get('currencies')?.find((prop) => prop.id === item.currencyId)?.name || '---',\r\n            paymentSettingText: cacheOfDictionaries.get('emissionPeriod')?.find((prop) => prop.key === item.period)?.displayName || '---'\r\n        }));\r\n        return bondIssueListNew;\r\n    }\r\n\r\n    return bondIssueList;\r\n}\r\n\r\nfunction changeAgencyAgreementList(list) {\r\n    if (list && list?.length > 0) {\r\n        const newList = list.map((item) => ({\r\n            id: item.id,\r\n            contractDate: item.contractDate,\r\n            contractNumber: item.contractNumber,\r\n            identityNumber: item.client?.identityNumber || '---',\r\n            fullName: item.client?.fullName || '---',\r\n            fio: item.client?.fio || '---',\r\n            clientId: item.clientId,\r\n            status: item.status\r\n        }));\r\n        return newList;\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\nfunction changeOrderList(orderList, clientList) {\r\n    if (orderList && orderList?.length > 0) {\r\n        const orderListNew = orderList.map((item) => ({\r\n            ...item,\r\n            client: clientList?.list?.find((prop) => prop.id === item.clientId)?.fullName || '---',\r\n            authorFullName: item.author?.fullName || '---',\r\n            orderTypeText: cacheOfDictionaries.get('paymentOrderTypes')?.find((acc) => item.orderType === acc.key)?.displayName || '',\r\n            contractNumber: item.contract?.contractNumber || '---',\r\n            creditAccountText: item.creditAccount?.balance || 0,\r\n            debitAccountText: item.debitAccount?.balance || 0\r\n        }));\r\n        return orderListNew;\r\n    }\r\n\r\n    return orderList;\r\n}\r\n\r\nexport {\r\n    changeOrderList,\r\n    changeAgencyAgreementList,\r\n    changeContractRatesAndAccounts,\r\n    changeDepositPaymentSchedule,\r\n    changeDepositList,\r\n    changeAccountRecords,\r\n    changeBondIssueList\r\n};\r\n","const headCellsActionLog = [\r\n    {\r\n        id: 'date',\r\n        type: 'date',\r\n        label: 'Дата создания'\r\n    },\r\n    {\r\n        id: 'reason',\r\n        label: 'Действие'\r\n    },\r\n    {\r\n        id: 'totalCost',\r\n        label: 'Сумма'\r\n    },\r\n    {\r\n        id: 'status',\r\n        type: 'contractActionStatuses',\r\n        label: 'Статус'\r\n    }\r\n];\r\n\r\nconst headCellsNote = [\r\n    {\r\n        id: 'noteDate',\r\n        type: 'date',\r\n        label: 'Дата создания'\r\n    },\r\n    {\r\n        id: 'note',\r\n        label: 'Примечание'\r\n    },\r\n    {\r\n        id: 'authorFullName',\r\n        label: 'Автор'\r\n    }\r\n];\r\n\r\nconst headCellsAccounts = [\r\n    {\r\n        id: 'accountSettingText',\r\n        label: 'Название'\r\n    },\r\n    {\r\n        id: 'accountPlanCode',\r\n        label: 'Код'\r\n    },\r\n    {\r\n        id: 'accountPlanText',\r\n        label: 'План счета'\r\n    },\r\n    {\r\n        id: 'balance',\r\n        label: 'Баланс'\r\n    }\r\n];\r\n\r\nconst headCellsEventLog = [\r\n    {\r\n        id: 'contractDate',\r\n        type: 'date',\r\n        label: 'Дата'\r\n    },\r\n    {\r\n        id: 'eventCode',\r\n        label: 'Событие'\r\n    },\r\n    {\r\n        id: 'clientFio',\r\n        label: 'Пользователь'\r\n    },\r\n    {\r\n        id: 'eventStatus',\r\n        label: 'Статус'\r\n    }\r\n];\r\n\r\nconst subHeadCellsAccounts = [\r\n    {\r\n        id: 'date',\r\n        type: 'date',\r\n        label: 'Дата'\r\n    },\r\n    {\r\n        id: 'businessOperationSettingText',\r\n        label: 'Бизнес операция'\r\n    },\r\n    {\r\n        id: 'incomingBalance',\r\n        type: 'isActive',\r\n        label: 'Входящий баланс'\r\n    },\r\n    {\r\n        id: 'debitText',\r\n        label: 'Дебет'\r\n    },\r\n    {\r\n        id: 'creditText',\r\n        label: 'Кредит'\r\n    },\r\n    {\r\n        id: 'outgoingBalance',\r\n        type: 'isActive',\r\n        label: 'Исходящий баланс'\r\n    },\r\n    {\r\n        id: 'reason',\r\n        label: 'Назначение'\r\n    }\r\n];\r\n\r\nconst headCellsBondAgreementList = [\r\n    {\r\n        id: 'contractDate',\r\n        type: 'date',\r\n        label: 'Дата'\r\n    },\r\n    {\r\n        id: 'contractNumber',\r\n        label: '№'\r\n    },\r\n    {\r\n        id: 'emitent',\r\n        type: 'content',\r\n        label: 'Клиент'\r\n    },\r\n    {\r\n        id: 'totalCost',\r\n        type: 'content',\r\n        label: 'Сумма'\r\n    },\r\n    {\r\n        id: 'isin',\r\n        label: 'ISIN Эмиссии'\r\n    },\r\n    {\r\n        id: 'quantity',\r\n        label: 'Кол.облигаций'\r\n    },\r\n    {\r\n        id: 'currencyText',\r\n        label: 'Валюта'\r\n    },\r\n    {\r\n        id: 'issueRate',\r\n        label: 'Ставка'\r\n    },\r\n    {\r\n        id: 'maturityDate',\r\n        type: 'date',\r\n        label: 'Дата возврата'\r\n    },\r\n    {\r\n        id: 'status',\r\n        type: 'status',\r\n        label: 'Статус'\r\n    }\r\n];\r\n\r\nconst headCellsBondIssueList = [\r\n    {\r\n        id: 'contractDate',\r\n        type: 'date',\r\n        label: 'Дата выпуска'\r\n    },\r\n    {\r\n        id: 'isin',\r\n        label: 'ISIN'\r\n    },\r\n    {\r\n        id: 'emitent',\r\n        type: 'content',\r\n        label: 'Эмитент'\r\n    },\r\n\r\n    {\r\n        id: 'nominalCost',\r\n        label: 'Номинальная стоимость'\r\n    },\r\n    // {\r\n    //     id: 'couponAmount',\r\n    //     label: 'Купонная ставка'\r\n    // },\r\n    {\r\n        id: 'currencyText',\r\n        label: 'Валюта'\r\n    },\r\n    {\r\n        id: 'paymentSettingText',\r\n        label: 'Периодичность выплаты'\r\n    },\r\n    {\r\n        id: 'quantity',\r\n        label: 'Общее кол.облигаций'\r\n    },\r\n    {\r\n        id: 'actualQuantity',\r\n        label: 'Кол.размещенных облигаций'\r\n    },\r\n    {\r\n        id: 'selledQuantity',\r\n        label: 'Остаток не размещенных облигаций'\r\n    },\r\n    {\r\n        id: 'maturityDate',\r\n        type: 'date',\r\n        label: 'Дата погашения'\r\n    },\r\n    {\r\n        id: 'status',\r\n        type: 'status',\r\n        label: 'Статус'\r\n    }\r\n];\r\n\r\nconst headCellsClientList = [\r\n    {\r\n        id: 'identityNumber',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'ИИН / БИН'\r\n    },\r\n    {\r\n        id: 'fullName',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Ф.И.О / Наименование'\r\n    }\r\n];\r\n\r\nconst headCellsAgencyAgreements = [\r\n    {\r\n        id: 'contractDate',\r\n        type: 'date',\r\n        label: 'Дата'\r\n    },\r\n    {\r\n        id: 'contractNumber',\r\n        label: '№ соглашения'\r\n    },\r\n\r\n    {\r\n        id: 'identityNumber',\r\n        label: 'ИИН / БИН'\r\n    },\r\n    {\r\n        id: 'fullName',\r\n        label: 'Ф.И.О / Наименование'\r\n    },\r\n    {\r\n        id: 'status',\r\n        type: 'status',\r\n        label: 'Статус'\r\n    }\r\n];\r\n\r\nconst headCellsDepositAgreementList = [\r\n    {\r\n        id: 'contractDate',\r\n        type: 'date',\r\n        label: 'Дата'\r\n    },\r\n    {\r\n        id: 'contractNumber',\r\n        label: '№'\r\n    },\r\n\r\n    {\r\n        id: 'clientFio',\r\n        label: 'Клиент'\r\n    },\r\n    {\r\n        id: 'contractAmount',\r\n        label: 'Сумма'\r\n    },\r\n    {\r\n        id: 'currencyId',\r\n        type: 'currency',\r\n        label: 'Валюта'\r\n    },\r\n    {\r\n        id: 'contractRateText',\r\n        label: 'Ставка'\r\n    },\r\n    {\r\n        id: 'issueRate',\r\n        type: 'issueRate',\r\n        label: 'Курс валюты'\r\n    },\r\n    {\r\n        id: 'maturityDate',\r\n        type: 'date',\r\n        label: 'Дата возврата'\r\n    },\r\n    {\r\n        id: 'status',\r\n        type: 'status',\r\n        label: 'Статус'\r\n    }\r\n];\r\n\r\nconst changingConditions = [\r\n    {\r\n        id: 'depositRate',\r\n        label: 'Изменение ставки депозита'\r\n    },\r\n    {\r\n        id: 'keyDate',\r\n        label: 'Изменение контрольной даты'\r\n    },\r\n    {\r\n        id: 'signOfCapitalization',\r\n        label: 'Изменение признака капитализации'\r\n    },\r\n    {\r\n        id: 'replenishmentOfTheDepositAmount',\r\n        label: 'Пополнение суммы депозита'\r\n    },\r\n    {\r\n        id: 'withdrawalOfCapitalization',\r\n        label: 'Снятие суммы депозита'\r\n    }\r\n];\r\n\r\nconst interestManagementList = [\r\n    {\r\n        id: 'InterestAccrual',\r\n        label: 'Начисление процентов'\r\n    },\r\n    {\r\n        id: 'TransferOfAccruedInterest',\r\n        label: 'Перенос начисленных процентов на счет для выплаты'\r\n    },\r\n    {\r\n        id: 'InterestCapitalization',\r\n        label: 'Капитализация процентов'\r\n    },\r\n    {\r\n        id: 'InterestPayment',\r\n        label: 'Выплата процентов'\r\n    },\r\n    {\r\n        id: 'FullPayout',\r\n        label: 'Полная выплата'\r\n    }\r\n];\r\n\r\nconst interestBondManagementList = [\r\n    {\r\n        id: 'InterestAccrual',\r\n        label: 'Начисление процентов'\r\n    },\r\n    {\r\n        id: 'InterestPayment',\r\n        label: 'Выплата процентов'\r\n    },\r\n    {\r\n        id: 'FullPayout',\r\n        label: 'Полная выплата'\r\n    }\r\n];\r\n\r\nconst headCellsPaymentSchedule = [\r\n    {\r\n        id: 'date',\r\n        type: 'date',\r\n        label: 'Дата платежа'\r\n    },\r\n    {\r\n        id: 'paymentSettingText',\r\n        label: 'Действие'\r\n    },\r\n    {\r\n        id: 'amount',\r\n        label: 'Сумма'\r\n    },\r\n    {\r\n        id: 'statusText',\r\n        label: 'Статус'\r\n    }\r\n];\r\n\r\nconst headCellsRate = [\r\n    {\r\n        id: 'date',\r\n        type: 'date',\r\n        label: 'Дата начала действия ставки'\r\n    },\r\n    {\r\n        id: 'rate',\r\n        label: 'Процент'\r\n    },\r\n    {\r\n        id: 'daysInMonthText',\r\n        label: 'Дней в месяце'\r\n    },\r\n    {\r\n        id: 'daysInYear',\r\n        label: 'Дней в году'\r\n    }\r\n];\r\n\r\nconst headCellsInterestRate = [\r\n    {\r\n        id: 'rate',\r\n        label: 'Ставка'\r\n    },\r\n    {\r\n        id: 'rateSettingIdText',\r\n        label: 'Действие'\r\n    },\r\n    {\r\n        id: 'daysInMonthText',\r\n        label: 'База начисления'\r\n    }\r\n];\r\n\r\nconst headCellsOrderList = [\r\n    {\r\n        id: 'orderNumber',\r\n        label: 'Номер'\r\n    },\r\n    {\r\n        id: 'orderTypeText',\r\n        label: 'Вид ордера'\r\n    },\r\n    {\r\n        id: 'orderDate',\r\n        type: 'date',\r\n        label: 'Дата'\r\n    },\r\n    {\r\n        id: 'reason',\r\n        label: 'Основание'\r\n    },\r\n    {\r\n        id: 'orderCost',\r\n        label: 'Сумма'\r\n    },\r\n    {\r\n        id: 'debitAccountText',\r\n        label: 'Дебет'\r\n    },\r\n    {\r\n        id: 'creditAccountText',\r\n        label: 'Кредит'\r\n    },\r\n    {\r\n        id: 'client',\r\n        label: 'Клиент'\r\n    },\r\n    {\r\n        id: 'contractNumber',\r\n        label: 'Договор'\r\n    },\r\n    {\r\n        id: 'status',\r\n        type: 'paymentOrderStatuses',\r\n        label: 'Статус'\r\n    },\r\n    {\r\n        id: 'authorFullName',\r\n        label: 'Автор'\r\n    }\r\n];\r\n\r\nconst payDayList = [\r\n    { id: 1, displayName: 1 },\r\n    { id: 2, displayName: 2 },\r\n    { id: 3, displayName: 3 },\r\n    { id: 4, displayName: 4 },\r\n    { id: 5, displayName: 5 },\r\n    { id: 6, displayName: 6 },\r\n    { id: 7, displayName: 7 },\r\n    { id: 8, displayName: 8 },\r\n    { id: 9, displayName: 9 },\r\n    { id: 10, displayName: 10 },\r\n    { id: 11, displayName: 11 },\r\n    { id: 12, displayName: 12 },\r\n    { id: 13, displayName: 13 },\r\n    { id: 14, displayName: 14 },\r\n    { id: 15, displayName: 15 },\r\n    { id: 16, displayName: 16 },\r\n    { id: 17, displayName: 17 },\r\n    { id: 18, displayName: 18 },\r\n    { id: 19, displayName: 19 },\r\n    { id: 20, displayName: 20 },\r\n    { id: 21, displayName: 21 },\r\n    { id: 22, displayName: 22 },\r\n    { id: 23, displayName: 23 },\r\n    { id: 24, displayName: 24 },\r\n    { id: 25, displayName: 25 },\r\n    { id: 26, displayName: 26 },\r\n    { id: 27, displayName: 27 },\r\n    { id: 28, displayName: 28 },\r\n    { id: 29, displayName: 29 },\r\n    { id: 30, displayName: 30 }\r\n];\r\n\r\nconst capitalization = [\r\n    { id: 'true', name: 'Да' },\r\n    { id: 'false', name: 'Нет' }\r\n];\r\n\r\nconst gender = [\r\n    { id: 'true', name: 'Мужской' },\r\n    { id: 'false', name: 'Женский' }\r\n];\r\n\r\nconst translationTypeOfProps = [\r\n    { id: 'iban', name: 'Расчетный счет (IBAN)' },\r\n    { id: 'cashe', name: 'Наличными' }\r\n];\r\n\r\nconst translationOfContactTypes = [\r\n    { id: 'mobile', name: 'Мобильный телефон' },\r\n    { id: 'home', name: 'Домашний телефон' },\r\n    { id: 'work', name: 'Рабочий телефон' }\r\n];\r\nconst translationBank = [{ id: 'kaspi', name: 'AO \"Kaspi Bank\" (CASPKZKA)' }];\r\n\r\nexport {\r\n    headCellsOrderList,\r\n    headCellsAgencyAgreements,\r\n    headCellsInterestRate,\r\n    translationBank,\r\n    gender,\r\n    capitalization,\r\n    translationTypeOfProps,\r\n    translationOfContactTypes,\r\n    payDayList,\r\n    headCellsRate,\r\n    headCellsPaymentSchedule,\r\n    interestManagementList,\r\n    interestBondManagementList,\r\n    changingConditions,\r\n    headCellsDepositAgreementList,\r\n    headCellsClientList,\r\n    headCellsActionLog,\r\n    headCellsBondIssueList,\r\n    headCellsBondAgreementList,\r\n    headCellsNote,\r\n    headCellsAccounts,\r\n    headCellsEventLog,\r\n    subHeadCellsAccounts\r\n};\r\n","import request from '@/core/utils/request';\r\nimport { listPending, getAgencyAgreementList } from '@/core/store/lists/actions';\r\nimport { addAlertToList } from '@/core/store/alerts/actions';\r\nimport handleErrors from './handleErrors';\r\n\r\nconst getAgencyAgreements =\r\n    (params = {}) =>\r\n    (dispatch) => {\r\n        dispatch(listPending());\r\n        // dispatch(addAlertToList({ type: 'info', message: 'Подождите, список агентских договоров загружается' }));\r\n        request.post(`/api/Agency/list`, {}).then(\r\n            (data) => dispatch(getAgencyAgreementList(data)),\r\n            (errorPromise) => handleErrors(dispatch, errorPromise, 'Не удалось загрузить список агентских договоров')\r\n        );\r\n    };\r\n\r\nconst saveAgencyAgreement =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/Agency/save`, params).then(\r\n            (data) => {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Агентское соглашение сохранено' }));\r\n                dispatch(getAgencyAgreements());\r\n                return data;\r\n            },\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Агентское соглашение не сохранено');\r\n                throw new Error();\r\n            }\r\n        );\r\n\r\nconst removeAgencyAgreement =\r\n    (params = null) =>\r\n    (dispatch) =>\r\n        request.delete(`/api/Agency/delete`, params).catch((err) => {\r\n            if (err && err.status >= 400) {\r\n                handleErrors(dispatch, err, 'Ошибка при удалении агентского соглашения');\r\n            } else {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Агентское соглашение успешно удалено' }));\r\n            }\r\n        });\r\n\r\nconst signAgencyAgreement =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/AgencyAction/sign`, params).then(\r\n            (data) => dispatch(addAlertToList({ type: 'success', message: 'Агентский договор подписан' })),\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Агентский договор не подписан');\r\n                throw new Error();\r\n            }\r\n        );\r\n\r\nexport { getAgencyAgreements, removeAgencyAgreement, saveAgencyAgreement, signAgencyAgreement };\r\n","import request from '@/core/utils/request';\r\nimport { createBondIssueConstructor, createBondAgreementConstructor } from '@/core/store/constructors/actions';\r\nimport { listPending, getBondIssueSuccess, getBondAgreementSuccess, getOrderListSuccess } from '@/core/store/lists/actions';\r\nimport { addAlertToList } from '@/core/store/alerts/actions';\r\nimport { changeContractRatesAndAccounts, changeDepositPaymentSchedule } from '@/core/helpers/changeDataStructure';\r\nimport handleErrors from './handleErrors';\r\n\r\nconst getBondIssueList =\r\n    (params = {}) =>\r\n    (dispatch) => {\r\n        dispatch(listPending());\r\n        dispatch(addAlertToList({ type: 'info', message: 'Подождите, данные подгружаются' }));\r\n        request.post(`/api/BondEmission/list`, {}).then(\r\n            (data) => dispatch(getBondIssueSuccess(data)),\r\n            (errorPromise) => handleErrors(dispatch, errorPromise, 'Не удалось загрузить список выпусков облигаций')\r\n        );\r\n    };\r\n\r\nconst getBondAgreementList =\r\n    (params = {}) =>\r\n    (dispatch) => {\r\n        dispatch(listPending());\r\n        dispatch(addAlertToList({ type: 'info', message: 'Подождите, данные подгружаются' }));\r\n        request.post(`/api/Bond/list`, {}).then(\r\n            (data) => dispatch(getBondAgreementSuccess(data)),\r\n            (errorPromise) => handleErrors(dispatch, errorPromise, 'Не удалось загрузить список выпусков договоров по облигациям')\r\n        );\r\n    };\r\n\r\nconst сalcCouponPaymentAmount =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/BondEmission/сalcCouponPaymentAmount`, params).then(\r\n            (data) => {\r\n                dispatch(addAlertToList({ type: 'info', message: `Результат расчета = ${data}` }));\r\n                return data;\r\n            },\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Ошибка в рассчетах');\r\n                throw new Error();\r\n            }\r\n        );\r\n\r\nconst сalcBondPercentAmount =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/Bond/calcBondPercentAmount`, params).then(\r\n            (data) => {\r\n                dispatch(addAlertToList({ type: 'info', message: `Перерасчет произведен` }));\r\n                return data;\r\n            },\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Ошибка в рассчетах');\r\n                throw new Error();\r\n            }\r\n        );\r\n\r\nconst saveBindIssue =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/BondEmission/save`, params).then(\r\n            (data) => {\r\n                // dispatch(createDepositContractConstructor(data));\r\n                dispatch(addAlertToList({ type: 'success', message: 'Эмиссия облигаций успешно сохранена' }));\r\n                return data;\r\n            },\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Эмиссия облигаций не сохранена');\r\n                throw new Error();\r\n            }\r\n        );\r\n\r\nconst getBondIssue =\r\n    (params = null) =>\r\n    (dispatch) => {\r\n        if (params) {\r\n            return request.post(`/api/BondEmission/card`, params).then(\r\n                (data) => data,\r\n                (errorPromise) => {\r\n                    handleErrors(dispatch, errorPromise, 'Эмиссия облигаций не отображается');\r\n                    throw new Error();\r\n                }\r\n            );\r\n        }\r\n        dispatch(createBondIssueConstructor());\r\n    };\r\n\r\nconst getBondAgreementCard =\r\n    (params = null) =>\r\n    (dispatch) => {\r\n        if (params) {\r\n            return request.post(`/api/Bond/card`, params).then(\r\n                (data) => changeContractRatesAndAccounts(data),\r\n                (errorPromise) => {\r\n                    handleErrors(dispatch, errorPromise, 'Договор по облигаций не отображается');\r\n                    throw new Error();\r\n                }\r\n            );\r\n        }\r\n        dispatch(createBondIssueConstructor());\r\n    };\r\n\r\nconst saveBondAgreement =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/Bond/save`, params).then(\r\n            (data) => {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Договор по облигациям успешно сохранен' }));\r\n                return data;\r\n            },\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Договор по облигациям не сохранен');\r\n                throw new Error();\r\n            }\r\n        );\r\nconst signBondIssueById =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/BondEmissionAction/sign`, params).then(\r\n            (data) => dispatch(addAlertToList({ type: 'success', message: 'Эмиссия бондов подписана' })),\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Эмиссия бондов не подписана');\r\n                throw new Error();\r\n            }\r\n        );\r\n\r\nconst signBondAgreementById =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/BondAction/sign`, params).then(\r\n            (data) => {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Договор по облигациям отправлен в FinCore для подтверждения' }));\r\n                return data?.status;\r\n            },\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Произошла ошибка при подписании договора по облигациям');\r\n                throw new Error();\r\n            }\r\n        );\r\n\r\nconst sellSecondaryBondAgreement =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/secondDealBond/save`, params).then(\r\n            (data) => {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Вторичная продажа успешна произведена' }));\r\n                return data.id || null;\r\n            },\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Вторичная продажа не произведена');\r\n                throw new Error();\r\n            }\r\n        );\r\n\r\nconst removeNote =\r\n    (params = null) =>\r\n    (dispatch) => {\r\n        request.delete(`/api/Bond/deleteContractNote`, params).catch((err) => {\r\n            if (err && err.status >= 400) {\r\n                handleErrors(dispatch, err, 'Ошибка при удалении заметки');\r\n            } else {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Заметка удалена' }));\r\n            }\r\n        });\r\n    };\r\n\r\nconst addNodeById =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/Bond/addNote`, params).then(\r\n            (data) => {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Заметка добавлена' }));\r\n            },\r\n            (errorPromise) => handleErrors(dispatch, errorPromise, 'Заметка не добавлена')\r\n        );\r\n\r\nconst moveBondToAnotherContract =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/BondAction/transferToBond`, params).then(\r\n            (data) => {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Перевод на другой контракт успешна произведен' }));\r\n                return data;\r\n            },\r\n\r\n            (errorPromise) => {\r\n                handleErrors(dispatch, errorPromise, 'Перевод на другой контракт не прошел');\r\n                throw new Error();\r\n            }\r\n        );\r\n\r\nconst getOrderList =\r\n    (params = {}) =>\r\n    (dispatch) => {\r\n        dispatch(listPending());\r\n        // dispatch(addAlertToList({ type: 'info', message: 'Подождите, данные подгружаются' }));\r\n        request.post(`/api/PaymentOrder/list`, {}).then(\r\n            (data) => dispatch(getOrderListSuccess(data)),\r\n            (errorPromise) => handleErrors(dispatch, errorPromise, 'Не удалось загрузить список ордеров')\r\n        );\r\n    };\r\n\r\nexport {\r\n    getOrderList,\r\n    moveBondToAnotherContract,\r\n    removeNote,\r\n    sellSecondaryBondAgreement,\r\n    addNodeById,\r\n    сalcBondPercentAmount,\r\n    signBondAgreementById,\r\n    getBondAgreementCard,\r\n    getBondIssueList,\r\n    сalcCouponPaymentAmount,\r\n    saveBindIssue,\r\n    getBondAgreementList,\r\n    getBondIssue,\r\n    saveBondAgreement,\r\n    signBondIssueById\r\n};\r\n","import request from '@/core/utils/request';\r\nimport { listPending, getClientListSuccess } from '@/core/store/lists/actions';\r\nimport { addAlertToList } from '@/core/store/alerts/actions';\r\nimport handleErrors from './handleErrors';\r\n\r\nconst getClientList =\r\n    (params = {}) =>\r\n    (dispatch) => {\r\n        dispatch(listPending());\r\n        request.post(`/api/Client/list`, params).then(\r\n            (data) => dispatch(getClientListSuccess(data)),\r\n            (errorPromise) => handleErrors(dispatch, errorPromise, 'Ошибка при загрузке списка клиентов')\r\n        );\r\n    };\r\n\r\nconst removeClientFromList =\r\n    (params = {}) =>\r\n    (dispatch) => {\r\n        request.delete(`/api/Client/delete`, params).catch((err) => {\r\n            if (err && err.status >= 400) {\r\n                handleErrors(dispatch, err, 'Ошибка при удалении клиента');\r\n            } else {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Клиент удален' }));\r\n                dispatch(getClientList());\r\n            }\r\n        });\r\n    };\r\n\r\nconst createClient =\r\n    (params = {}) =>\r\n    (dispatch) => {\r\n        request\r\n            .post(`/api/Client/save`, {\r\n                ...params\r\n            })\r\n            .then(\r\n                (data) => {\r\n                    dispatch(addAlertToList({ type: 'success', message: 'Клиент сохранен' }));\r\n                    window.location.href = `${window.location.origin}/clients`;\r\n                },\r\n                (errorPromise) => handleErrors(dispatch, errorPromise, 'Ошибка при сохранений клиента')\r\n            );\r\n    };\r\n\r\nexport { getClientList, removeClientFromList, createClient };\r\n","import { unstable_batchedUpdates } from 'react-dom';\r\nimport request from '@/core/utils/request';\r\nimport { getClientList } from '@/core/services/clientList';\r\nimport handleErrors from '@/core/services/handleErrors';\r\nimport { addAlertToList } from '@/core/store/alerts/actions';\r\nimport { getAgencyAgreements } from '@/core/services/agencyAgreementActions';\r\nimport {\r\n    gender,\r\n    payDayList,\r\n    capitalization,\r\n    translationTypeOfProps,\r\n    translationOfContactTypes,\r\n    translationBank\r\n} from '@/core/helpers/headLines';\r\n\r\nconst cacheOfDictionaries = new Map();\r\ncacheOfDictionaries\r\n    .set('gender', gender)\r\n    .set('payDayList', payDayList)\r\n    .set('translationBank', translationBank)\r\n    .set('capitalization', capitalization)\r\n    .set('translationTypeOfProps', translationTypeOfProps)\r\n    .set('translationOfContactTypes', translationOfContactTypes);\r\n\r\nfunction requestHelper(dispatch, endpoint, error, params = {}) {\r\n    const dictionaryName = endpoint.slice(endpoint.lastIndexOf('/') + 1);\r\n\r\n    if (!cacheOfDictionaries.has(dictionaryName)) {\r\n        return request.post(endpoint, params).then(\r\n            (data) => {\r\n                const arr = Array.isArray(data) ? data : data.list || [];\r\n                cacheOfDictionaries.set(dictionaryName, arr);\r\n            },\r\n            (errorPromise) => handleErrors(dispatch, errorPromise, error)\r\n        );\r\n    }\r\n\r\n    return cacheOfDictionaries.get(dictionaryName);\r\n}\r\n\r\nconst getDictionaries = () => (dispatch) =>\r\n    Promise.all([\r\n        unstable_batchedUpdates(() => {\r\n            dispatch(getClientList()),\r\n                dispatch(getAgencyAgreements()),\r\n                requestHelper(dispatch, `/api/client/list`, 'Ошибка при загрузке списка банков', {\r\n                    model: {\r\n                        isBank: true\r\n                    }\r\n                }),\r\n                requestHelper(dispatch, `/api/Dictionary/paymentOrderStatuses`, 'Ошибка при загрузке статуса ордеров'),\r\n                requestHelper(dispatch, `/api/Dictionary/paymentOrderTypes`, 'Ошибка при загрузке списка типа ордеров'),\r\n                requestHelper(dispatch, `/api/Dictionary/clientRequisitTypes`, 'Ошибка при загрузке списка реквизитов'),\r\n                requestHelper(dispatch, `/api/Dictionary/contractTypeCodes`, 'Ошибка при загрузке списка типов бондов'),\r\n                requestHelper(dispatch, `/api/Dictionary/contractActionStatuses`, 'Ошибка при загрузке статусов журнала действий'),\r\n                requestHelper(dispatch, `/api/Dictionary/payTypes`, 'Ошибка при загрузке списка видов платежей'),\r\n                requestHelper(dispatch, `/api/Dictionary/emissionPeriod`, 'Ошибка при загрузке списка периодичности выплат'),\r\n                requestHelper(dispatch, `/api/Dictionary/eventCodes`, 'Ошибка при загрузке списка кодов журнала событии'),\r\n                requestHelper(dispatch, `/api/Dictionary/eventStatuses`, 'Ошибка при загрузке списка статусов журнала событии'),\r\n                requestHelper(dispatch, `/api/Dictionary/interestOperations`, 'Ошибка при загрузке списка управление процентами'),\r\n                requestHelper(dispatch, `/api/Dictionary/businessOperationSettings`, 'Ошибка при загрузке списка бизнес операций'),\r\n                requestHelper(dispatch, `/api/Dictionary/contractSettingRates`, 'Ошибка при загрузке процентов контракта'),\r\n                requestHelper(dispatch, `/api/Dictionary/accountPlans`, 'Ошибка при загрузке планов счета'),\r\n                requestHelper(dispatch, `/api/Dictionary/accountSettings`, 'Ошибка при загрузке номеров счета'),\r\n                requestHelper(dispatch, `/api/Dictionary/currencies`, 'Ошибка при загрузке справочника валют'),\r\n                requestHelper(dispatch, `/api/Dictionary/statuses`, 'Ошибка при загрузке справочника статусов'),\r\n                requestHelper(dispatch, `/api/Dictionary/depositScheduleStatuses`, 'Ошибка при загрузке справочника статусов'),\r\n                requestHelper(dispatch, `/api/Dictionary/branches`, 'Ошибка при загрузке справочника филиалов'),\r\n                requestHelper(dispatch, `/api/Dictionary/clientLegalForms`, 'Ошибка при загрузке правовых форм'),\r\n                requestHelper(dispatch, `/api/Dictionary/contractPeriodTypes`, 'Ошибка при загрузке справочника процентных периодов'),\r\n                requestHelper(dispatch, `/api/Dictionary/contractClassTypes`, 'Ошибка при загрузке справочника типов контракта'),\r\n                requestHelper(dispatch, `/api/Dictionary/daysInMonth`, 'Ошибка при загрузке справочника количестао дней в месяце'),\r\n                requestHelper(dispatch, `/api/Dictionary/accountSettingsForRateSettings`, 'Ошибка при загрузке '),\r\n                requestHelper(dispatch, `/api/Dictionary/paymentSettingTypes`, 'Ошибка при загрузке справочника видов оплаты');\r\n        })\r\n    ]);\r\n\r\nconst saveContractSettingRate =\r\n    (params = {}) =>\r\n    (dispatch) =>\r\n        request.post(`/api/contractSettingRate/save`, params).then(\r\n            (data) => dispatch(addAlertToList({ type: 'success', message: 'Процентная ставка успешно сохранена' })),\r\n            (errorPromise) => handleErrors(dispatch, errorPromise, 'Процентная ставка не сохранена')\r\n        );\r\n\r\nconst removeContractSettingRate =\r\n    (params = null) =>\r\n    (dispatch) =>\r\n        request.delete(`/api/contractSettingRate/delete`, params).catch((err) => {\r\n            if (err && err.status >= 400) {\r\n                handleErrors(dispatch, err, 'Ошибка при удалении процентной ставки');\r\n            } else {\r\n                dispatch(addAlertToList({ type: 'success', message: 'Процентная ставка успешна удалена' }));\r\n            }\r\n        });\r\n\r\nexport { getDictionaries, saveContractSettingRate, removeContractSettingRate, cacheOfDictionaries };\r\n","import { addAlertToList } from '@/core/store/alerts/actions';\r\n\r\nfunction handleErrors(dispatch, errorPromise, defaultError) {\r\n    if (typeof errorPromise.json === 'undefined') {\r\n        dispatch(addAlertToList({ type: 'error', message: `Проблемы с сервером ! ${defaultError}` }));\r\n    }\r\n\r\n    return errorPromise\r\n        .json()\r\n        .then((res) => {\r\n            if (typeof res.errors === 'object') {\r\n                for (const key in res.errors) {\r\n                    dispatch(addAlertToList({ type: 'error', message: res.errors[key] }));\r\n                }\r\n            } else if (typeof res.errors === 'string') {\r\n                dispatch(addAlertToList({ type: 'error', message: res.errors }));\r\n            } else {\r\n                dispatch(addAlertToList({ type: 'error', message: defaultError }));\r\n            }\r\n        })\r\n        .catch(() => dispatch(addAlertToList({ type: 'error', message: defaultError })));\r\n}\r\n\r\nexport default handleErrors;\r\n","import * as constants from './constants';\r\n\r\nconst addAlertToList = (payload) => ({ type: constants.ADD_ALERT_TO_LIST, payload });\r\nconst removeFirstAlert = () => ({ type: constants.REMOVE_FIRST_ALERT_FROM_LIST });\r\n\r\nexport { addAlertToList, removeFirstAlert };\r\n","export const ADD_ALERT_TO_LIST = 'ADD_ALERT_TO_LIST';\r\nexport const REMOVE_FIRST_ALERT_FROM_LIST = 'REMOVE_FIRST_ALERT_FROM_LIST';\r\n","import * as constants from './constants';\r\nimport { changeContractRatesAndAccounts } from '@/core/helpers/changeDataStructure';\r\n\r\nconst constructorPending = () => ({ type: constants.CONSTRUCTOR_PENDING, payload: true });\r\nconst createDepositContractConstructor = (payload = null) => ({\r\n    type: constants.CREATE_DEPOSIT_CONTRACT,\r\n    payload: changeContractRatesAndAccounts(payload)\r\n});\r\nconst createBondAgreementConstructor = (payload = null) => ({\r\n    type: constants.CREATE_BOND_AGREEMENT,\r\n    payload\r\n});\r\nconst createBondIssueConstructor = (payload = null) => ({\r\n    type: constants.CREATE_BOND_ISSUE,\r\n    payload\r\n});\r\nconst signDepositContractConstructor = (payload = null) => ({ type: constants.SIGN_DEPOSIT_CONTRACT, payload });\r\nconst signBondIssueConstructor = (payload = null) => ({ type: constants.SIGN_BOND_ISSUE, payload });\r\n\r\nexport {\r\n    constructorPending,\r\n    createDepositContractConstructor,\r\n    signDepositContractConstructor,\r\n    signBondIssueConstructor,\r\n    createBondAgreementConstructor,\r\n    createBondIssueConstructor\r\n};\r\n","export const CONSTRUCTOR_PENDING = 'CONSTRUCTOR_PENDING';\r\nexport const CREATE_DEPOSIT_CONTRACT = 'CREATE_DEPOSIT_CONTRACT';\r\nexport const SIGN_DEPOSIT_CONTRACT = 'SIGN_DEPOSIT_CONTRACT';\r\nexport const CREATE_BOND_AGREEMENT = 'CREATE_BOND_AGREEMENT';\r\nexport const CREATE_BOND_ISSUE = 'CREATE_BOND_ISSUE';\r\nexport const SIGN_BOND_ISSUE = 'SIGN_BOND_ISSUE';\r\n","import * as constants from './constants';\r\n\r\nconst listPending = () => ({ type: constants.LIST_PENDING, payload: true });\r\nconst getClientListSuccess = (payload = {}) => ({ type: constants.GET_CLIENT_LIST_SUCCESS, payload });\r\nconst getDepositAgreementSuccess = (payload = {}) => ({ type: constants.GET_DEPOSIT_AGREEMENT_LIST_SUCCESS, payload });\r\nconst getBondIssueSuccess = (payload = {}) => ({ type: constants.GET_BOND_ISSUE_LIST, payload });\r\nconst getBondAgreementSuccess = (payload = {}) => ({ type: constants.GET_BOND_AGREEMENT_LIST, payload });\r\nconst getAgencyAgreementList = (payload = {}) => ({ type: constants.GET_AGENCY_AGREEMENT_LIST, payload });\r\nconst getOrderListSuccess = (payload = {}) => ({ type: constants.GET_ORDER_LIST, payload });\r\nexport {\r\n    listPending,\r\n    getOrderListSuccess,\r\n    getClientListSuccess,\r\n    getDepositAgreementSuccess,\r\n    getBondIssueSuccess,\r\n    getBondAgreementSuccess,\r\n    getAgencyAgreementList\r\n};\r\n","export const LIST_PENDING = 'LIST_PENDING';\r\nexport const GET_CLIENT_LIST_SUCCESS = 'GET_CLIENT_LIST_SUCCESS';\r\nexport const GET_DEPOSIT_AGREEMENT_LIST_SUCCESS = 'GET_DEPOSIT_AGREEMENT_SUCCESS';\r\nexport const GET_BOND_ISSUE_LIST = 'GET_BOND_ISSUE_LIST';\r\nexport const GET_BOND_AGREEMENT_LIST = 'GET_BOND_AGREEMENT_LIST';\r\nexport const GET_AGENCY_AGREEMENT_LIST = 'GET_AGENCY_AGREEMENT_LIST';\r\nexport const GET_ORDER_LIST = 'GET_ORDER_LIST';\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = {\"apiUrl\":\"http://192.168.11.76:5000\"};","import config from 'config';\r\n\r\nconst toString = (query) => {\r\n    const toJSON = (param) => (typeof param === `object` ? JSON.stringify(param) : param);\r\n    const urify = (param) => toJSON(param);\r\n    return Object.keys(query)\r\n        .map((key) => `${urify(key)}=${encodeURIComponent(urify(query[key]))}`)\r\n        .join(`&`);\r\n};\r\n\r\nconst request =\r\n    (method) =>\r\n    (endpoint, params, isReturnJson = true) => {\r\n        const token = localStorage.getItem('user') || null;\r\n\r\n        const uri = `${config.apiUrl}${endpoint}`;\r\n\r\n        const opts = {\r\n            headers: {\r\n                'Content-Type': `application/json; charset=utf-8`,\r\n                accept: `*/*`,\r\n                'Access-Control-Allow-Origin': 'no-cors',\r\n                'Cache-Control': 'max-age=31536000'\r\n            },\r\n            method\r\n        };\r\n\r\n        if (/GET|DELETE/.test(method) && params) {\r\n            // if (Object.entries(params).length > 0) {\r\n            //     uri = `${config.apiUrl}${endpoint}?${toString(params)}`;\r\n            // }\r\n            opts.body = params;\r\n        }\r\n\r\n        if (/PATCH|POST|PUT/.test(method)) {\r\n            opts.body = JSON.stringify(params);\r\n        }\r\n        return fetch(uri, opts).then((res) => {\r\n            if (res.status === 401) {\r\n                localStorage.removeItem('user');\r\n                window.location.href = `${window.location.origin}/login`;\r\n            }\r\n\r\n            if (!res.ok) {\r\n                return Promise.reject(res);\r\n            }\r\n\r\n            if (!isReturnJson) {\r\n                return res;\r\n            }\r\n            return res.json();\r\n        });\r\n    };\r\n\r\nexport default {\r\n    get: request(`GET`),\r\n    patch: request(`PATCH`),\r\n    post: request(`POST`),\r\n    put: request(`PUT`),\r\n    delete: request(`DELETE`)\r\n};\r\n","import * as constants from './constants';\r\n\r\nexport const initialState = {\r\n    isOpen: ['clients'],\r\n    opened: true\r\n};\r\n\r\nconst map = new Map();\r\nmap.set(constants.MENU_OPEN, 'isOpen').set(constants.SET_MENU, 'opened');\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    if (map.has(action.type)) {\r\n        const key = map.get(action.type);\r\n        return { ...state, [key]: action.payload };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","export const SET_MENU = 'SET_MENU';\r\nexport const MENU_OPEN = 'MENU_OPEN';\r\n","import * as constants from './constants';\r\nimport { changeAgencyAgreementList } from '@/core/helpers/changeDataStructure';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    clientList: {},\r\n    depositAgreementList: {},\r\n    bondIssueList: {},\r\n    bondAgreementList: {},\r\n    agencyAgreementList: {},\r\n    orderList: {}\r\n};\r\n\r\nconst map = new Map();\r\nmap.set(constants.LIST_PENDING, 'pending')\r\n    .set(constants.GET_CLIENT_LIST_SUCCESS, 'clientList')\r\n    .set(constants.GET_DEPOSIT_AGREEMENT_LIST_SUCCESS, 'depositAgreementList')\r\n    .set(constants.GET_BOND_AGREEMENT_LIST, 'bondAgreementList')\r\n    .set(constants.GET_BOND_ISSUE_LIST, 'bondIssueList')\r\n    .set(constants.GET_ORDER_LIST, 'orderList')\r\n    .set(constants.GET_AGENCY_AGREEMENT_LIST, 'agencyAgreementList');\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    if (map.has(action.type)) {\r\n        const key = map.get(action.type);\r\n        if (key === 'agencyAgreementList') {\r\n            action.payload = { ...action.payload, list: changeAgencyAgreementList(action.payload.list) };\r\n        }\r\n        return { ...state, pending: false, [key]: action.payload };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import * as constants from './constants';\r\n\r\nconst initialState = [];\r\nconst map = new Map();\r\nconst reducer = (state = initialState, action) => {\r\n    map.set(constants.ADD_ALERT_TO_LIST, [...state, { show: true, ...action.payload }]).set(constants.REMOVE_FIRST_ALERT_FROM_LIST, [\r\n        ...state.slice(1)\r\n    ]);\r\n    if (map.has(action.type)) {\r\n        return map.get(action.type);\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import * as constants from './constants';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    depositContract: null,\r\n    signedDepositContract: null,\r\n    bondAgreement: null,\r\n    bondIssue: null,\r\n    signedBondIssue: null\r\n};\r\n\r\nconst map = new Map();\r\nmap.set(constants.CONSTRUCTOR_PENDING, 'pending')\r\n    .set(constants.CREATE_DEPOSIT_CONTRACT, 'depositContract')\r\n    .set(constants.CREATE_BOND_AGREEMENT, 'bondAgreement')\r\n    .set(constants.CREATE_BOND_ISSUE, 'bondIssue')\r\n    .set(constants.SIGN_DEPOSIT_CONTRACT, 'signedDepositContract')\r\n    .set(constants.SIGN_BOND_ISSUE, 'signedBondIssue');\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    if (map.has(action.type)) {\r\n        const key = map.get(action.type);\r\n        return { ...state, pending: false, [key]: action.payload };\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport customization from './customization/reducer';\r\nimport lists from './lists/reducer';\r\nimport alerts from './alerts/reducer';\r\nimport constructors from './constructors/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    customization,\r\n    constructors,\r\n    lists,\r\n    alerts\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst store = createStore(persistedReducer, applyMiddleware(thunk));\r\n\r\nexport { store };\r\n","import React, { lazy } from 'react';\r\nimport { Route, Routes } from 'react-router';\r\nimport { MainLayout } from '@/containers';\r\nimport { Loadable } from '@/components';\r\n\r\nconst BondIssueList = Loadable(lazy(() => import(/* bondIssueList */ '@/views/bondIssueList')));\r\n\r\nconst MainRoutes = () => (\r\n    <Routes>\r\n        <Route path=\"/\" element={<MainLayout />}>\r\n            <Route index element={<BondIssueList />} />\r\n            {/* <Route path=\"clients\" element={<ClientList />} />\r\n            <Route path=\"clients/:id\" element={<ViewingClient />} />\r\n            <Route path=\"clients/update/:id\" element={<ChangingClient />} />\r\n            <Route path=\"clients/create\" element={<CreateClient />} />\r\n            <Route path=\"contracts/deposit-agreements\" element={<DepositAgreementList />} />\r\n            <Route path=\"contracts/deposit-agreements/:id\" element={<ViewingDepositAgreement />} />\r\n            <Route path=\"contracts/bond-issue\" element={<BondIssueList />} />\r\n            <Route path=\"contracts/bond-issue/:id\" element={<BondIssueForm />} />\r\n            <Route path=\"contracts/bond-agreements\" element={<BondAgreementList />} />\r\n            <Route path=\"contracts/bond-agreements/:id\" element={<BondAgreementForm />} />\r\n            <Route path=\"handbook/interest-rates\" element={<HandbookInterestRates />} />\r\n            <Route path=\"agency-agreements\" element={<AgencyAgreementsList />} />\r\n            <Route path=\"agency-agreements/:id\" element={<AgencyAgreementForm />} />\r\n            <Route path=\"records/order-list\" element={<OrderList />} /> */}\r\n        </Route>\r\n    </Routes>\r\n);\r\n\r\nexport default MainRoutes;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"paper\":\"#fff\",\"primaryLight\":\"#e3f2fd\",\"primary200\":\"#90caf9\",\"primaryMain\":\"#2196f3\",\"primaryDark\":\"#1e88e5\",\"primary800\":\"#1565c0\",\"secondaryLight\":\"#e3f2fd\",\"secondary200\":\"#b39ddb\",\"secondaryMain\":\"#673ab7\",\"secondaryDark\":\"#1565c0\",\"secondary800\":\"#4527a0\",\"successLight\":\"#b9f6ca\",\"success200\":\"#69f0ae\",\"successMain\":\"#00e676\",\"successDark\":\"#00c853\",\"errorLight\":\"#ef9a9a\",\"errorMain\":\"#f44336\",\"errorDark\":\"#c62828\",\"orangeLight\":\"#fbe9e7\",\"orangeMain\":\"#ffab91\",\"orangeDark\":\"#d84315\",\"warningLight\":\"#fff8e1\",\"warningMain\":\"#ffe57f\",\"warningDark\":\"#ffc107\",\"grey50\":\"#fafafa\",\"grey100\":\"#f5f5f5\",\"grey200\":\"#eee\",\"grey300\":\"#e0e0e0\",\"grey500\":\"#9e9e9e\",\"grey600\":\"#757575\",\"grey700\":\"#616161\",\"grey900\":\"#212121\",\"darkPaper\":\"#111936\",\"darkBackground\":\"#1a223f\",\"darkLevel1\":\"#29314f\",\"darkLevel2\":\"#212946\",\"darkTextTitle\":\"#d7dcec\",\"darkTextPrimary\":\"#bdc8f0\",\"darkTextSecondary\":\"#8492c4\",\"darkPrimaryLight\":\"#e3f2fd\",\"darkPrimaryMain\":\"#2196f3\",\"darkPrimaryDark\":\"#1e88e5\",\"darkPrimary200\":\"#90caf9\",\"darkPrimary800\":\"#1565c0\",\"darkSecondaryLight\":\"#d1c4e9\",\"darkSecondaryMain\":\"#7c4dff\",\"darkSecondaryDark\":\"#651fff\",\"darkSecondary200\":\"#b39ddb\",\"darkSecondary800\":\"#6200ea\"};","/**\r\n * Typography used in theme\r\n * @param {JsonObject} theme theme customization object\r\n */\r\n\r\nexport default function themeTypography(theme) {\r\n    return {\r\n        fontFamily: theme?.customization?.fontFamily,\r\n        h6: {\r\n            fontWeight: 500,\r\n            color: theme.heading,\r\n            fontSize: '0.75rem'\r\n        },\r\n        h5: {\r\n            fontSize: '0.875rem',\r\n            color: theme.heading,\r\n            fontWeight: 500\r\n        },\r\n        h4: {\r\n            fontSize: '1rem',\r\n            color: theme.heading,\r\n            fontWeight: 600\r\n        },\r\n        h3: {\r\n            fontSize: '1.25rem',\r\n            color: theme.heading,\r\n            fontWeight: 600\r\n        },\r\n        h2: {\r\n            fontSize: '1.5rem',\r\n            color: theme.heading,\r\n            fontWeight: 700\r\n        },\r\n        h1: {\r\n            fontSize: '2.125rem',\r\n            color: theme.heading,\r\n            fontWeight: 700\r\n        },\r\n        subtitle1: {\r\n            fontSize: '0.875rem',\r\n            fontWeight: 500,\r\n            color: theme.textDark\r\n        },\r\n        subtitle2: {\r\n            fontSize: '0.75rem',\r\n            fontWeight: 400,\r\n            color: theme.darkTextSecondary\r\n        },\r\n        caption: {\r\n            fontSize: '0.75rem',\r\n            color: theme.darkTextSecondary,\r\n            fontWeight: 400\r\n        },\r\n        body1: {\r\n            fontSize: '0.875rem',\r\n            fontWeight: 400,\r\n            lineHeight: '1.334em'\r\n        },\r\n        body2: {\r\n            letterSpacing: '0em',\r\n            fontWeight: 400,\r\n            lineHeight: '1.5em',\r\n            color: theme.darkTextPrimary\r\n        },\r\n        button: {\r\n            textTransform: 'capitalize'\r\n        },\r\n        customInput: {\r\n            marginTop: 1,\r\n            marginBottom: 1,\r\n            '& > label': {\r\n                top: 23,\r\n                left: 0,\r\n                color: theme.grey500,\r\n                '&[data-shrink=\"false\"]': {\r\n                    top: 5\r\n                }\r\n            },\r\n            '& > div > input': {\r\n                padding: '30.5px 14px 11.5px !important'\r\n            },\r\n            '& legend': {\r\n                display: 'none'\r\n            },\r\n            '& fieldset': {\r\n                top: 0\r\n            }\r\n        },\r\n        mainContent: {\r\n            backgroundColor: theme.background,\r\n            width: '100%',\r\n            minHeight: 'calc(100vh - 66px)',\r\n            flexGrow: 1,\r\n            padding: '20px',\r\n            marginTop: '0px',\r\n            marginRight: '10px',\r\n            borderRadius: `${theme?.customization?.borderRadius}px`\r\n        },\r\n        menuCaption: {\r\n            fontSize: '0.875rem',\r\n            fontWeight: 500,\r\n            color: theme.heading,\r\n            padding: '6px',\r\n            textTransform: 'capitalize',\r\n            marginTop: '10px'\r\n        },\r\n        subMenuCaption: {\r\n            fontSize: '0.6875rem',\r\n            fontWeight: 500,\r\n            color: theme.darkTextSecondary,\r\n            textTransform: 'capitalize'\r\n        },\r\n        commonAvatar: {\r\n            cursor: 'pointer',\r\n            borderRadius: '8px'\r\n        },\r\n        smallAvatar: {\r\n            width: '22px',\r\n            height: '22px',\r\n            fontSize: '1rem'\r\n        },\r\n        mediumAvatar: {\r\n            width: '34px',\r\n            height: '34px',\r\n            fontSize: '1.2rem'\r\n        },\r\n        largeAvatar: {\r\n            width: '44px',\r\n            height: '44px',\r\n            fontSize: '1.5rem'\r\n        }\r\n    };\r\n}\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\n// assets\r\nimport colors from '@/assets/scss/_themes-vars.module.scss';\r\n\r\n// project imports\r\nimport componentStyleOverrides from './compStyleOverride';\r\nimport themePalette from './palette';\r\nimport themeTypography from './typography';\r\n\r\n/**\r\n * Represent theme style and structure as per Material-UI\r\n * @param {JsonObject} customization customization parameter object\r\n */\r\n\r\nexport const theme = (customization) => {\r\n    const color = colors;\r\n\r\n    const themeOption = {\r\n        colors: color,\r\n        heading: color.grey900,\r\n        paper: color.paper,\r\n        backgroundDefault: color.paper,\r\n        background: color.primaryLight,\r\n        darkTextPrimary: color.grey700,\r\n        darkTextSecondary: color.grey500,\r\n        textDark: color.grey900,\r\n        menuSelected: color.secondaryDark,\r\n        menuSelectedBack: color.secondaryLight,\r\n        divider: color.grey200,\r\n        customization\r\n    };\r\n\r\n    const palette = themePalette(themeOption);\r\n\r\n    const chipSX = {\r\n        height: 24,\r\n        padding: '0 6px'\r\n    };\r\n\r\n    const themeOptions = {\r\n        direction: 'ltr',\r\n        palette,\r\n        chip: {\r\n            error: {\r\n                ...chipSX,\r\n                color: palette.orange.dark,\r\n                backgroundColor: palette.orange.light\r\n            },\r\n            warning: {\r\n                ...chipSX,\r\n                color: palette.warning.dark,\r\n                backgroundColor: palette.warning.light\r\n            },\r\n            success: {\r\n                color: palette.success.dark,\r\n                backgroundColor: palette.success.light,\r\n                height: 28\r\n            }\r\n        },\r\n        mixins: {\r\n            toolbar: {\r\n                minHeight: '48px',\r\n                padding: '8px',\r\n                '@media (min-width: 600px)': {\r\n                    minHeight: '48px'\r\n                }\r\n            }\r\n        },\r\n        typography: themeTypography(themeOption)\r\n    };\r\n\r\n    const themes = createTheme(themeOptions);\r\n    themes.components = componentStyleOverrides(themeOption);\r\n\r\n    // const theme = useTheme();\r\n\r\n    // const chipSX = {\r\n    //     height: 24,\r\n    //     padding: '0 6px'\r\n    // };\r\n    // const chipErrorSX = {\r\n    //     ...chipSX,\r\n    //     color: theme.palette.orange.dark,\r\n    //     backgroundColor: theme.palette.orange.light,\r\n    //     marginRight: '5px'\r\n    // };\r\n\r\n    // const chipWarningSX = {\r\n    //     ...chipSX,\r\n    //     color: theme.palette.warning.dark,\r\n    //     backgroundColor: theme.palette.warning.light\r\n    // };\r\n\r\n    // const chipSuccessSX = {\r\n    //     ...chipSX,\r\n    //     color: theme.palette.success.dark,\r\n    //     backgroundColor: theme.palette.success.light,\r\n    //     height: 28\r\n    // };\r\n\r\n    return themes;\r\n};\r\n\r\nexport default theme;\r\n","/**\r\n * Color intention that you want to used in your theme\r\n * @param {JsonObject} theme Theme customization object\r\n */\r\n\r\nexport default function themePalette(theme) {\r\n    return {\r\n        mode: theme?.customization?.navType,\r\n        common: {\r\n            black: theme.colors?.darkPaper\r\n        },\r\n        primary: {\r\n            light: theme.colors?.primaryLight,\r\n            main: theme.colors?.primaryMain,\r\n            dark: theme.colors?.primaryDark,\r\n            200: theme.colors?.primary200,\r\n            800: theme.colors?.primary800\r\n        },\r\n        secondary: {\r\n            light: theme.colors?.secondaryLight,\r\n            main: theme.colors?.secondaryMain,\r\n            dark: theme.colors?.secondaryDark,\r\n            200: theme.colors?.secondary200,\r\n            800: theme.colors?.secondary800\r\n        },\r\n        error: {\r\n            light: theme.colors?.errorLight,\r\n            main: theme.colors?.errorMain,\r\n            dark: theme.colors?.errorDark\r\n        },\r\n        orange: {\r\n            light: theme.colors?.orangeLight,\r\n            main: theme.colors?.orangeMain,\r\n            dark: theme.colors?.orangeDark\r\n        },\r\n        warning: {\r\n            light: theme.colors?.warningLight,\r\n            main: theme.colors?.warningMain,\r\n            dark: theme.colors?.warningDark\r\n        },\r\n        success: {\r\n            light: theme.colors?.successLight,\r\n            200: theme.colors?.success200,\r\n            main: theme.colors?.successMain,\r\n            dark: theme.colors?.successDark\r\n        },\r\n        grey: {\r\n            50: theme.colors?.grey50,\r\n            100: theme.colors?.grey100,\r\n            500: theme.darkTextSecondary,\r\n            600: theme.heading,\r\n            700: theme.darkTextPrimary,\r\n            900: theme.textDark\r\n        },\r\n        dark: {\r\n            light: theme.colors?.darkTextPrimary,\r\n            main: theme.colors?.darkLevel1,\r\n            dark: theme.colors?.darkLevel2,\r\n            800: theme.colors?.darkBackground,\r\n            900: theme.colors?.darkPaper\r\n        },\r\n        text: {\r\n            primary: theme.darkTextPrimary,\r\n            secondary: theme.darkTextSecondary,\r\n            dark: theme.textDark,\r\n            hint: theme.colors?.grey100\r\n        },\r\n        background: {\r\n            paper: theme.paper,\r\n            default: theme.backgroundDefault\r\n        }\r\n    };\r\n}\r\n","export default function componentStyleOverrides(theme) {\r\n    const bgColor = theme.colors?.grey50;\r\n    return {\r\n        MuiButton: {\r\n            styleOverrides: {\r\n                root: {\r\n                    fontWeight: 500,\r\n                    borderRadius: '4px'\r\n                }\r\n            }\r\n        },\r\n        MuiPaper: {\r\n            defaultProps: {\r\n                elevation: 0\r\n            },\r\n            styleOverrides: {\r\n                root: {\r\n                    backgroundImage: 'none'\r\n                },\r\n                rounded: {\r\n                    borderRadius: `${theme?.customization?.borderRadius}px`\r\n                }\r\n            }\r\n        },\r\n        MuiCardHeader: {\r\n            styleOverrides: {\r\n                root: {\r\n                    color: theme.colors?.textDark,\r\n                    padding: '24px'\r\n                },\r\n                title: {\r\n                    fontSize: '1.125rem'\r\n                }\r\n            }\r\n        },\r\n        MuiCardContent: {\r\n            styleOverrides: {\r\n                root: {\r\n                    padding: '24px'\r\n                }\r\n            }\r\n        },\r\n        MuiCardActions: {\r\n            styleOverrides: {\r\n                root: {\r\n                    padding: '24px'\r\n                }\r\n            }\r\n        },\r\n        MuiListItemButton: {\r\n            styleOverrides: {\r\n                root: {\r\n                    color: theme.darkTextPrimary,\r\n                    paddingTop: '10px',\r\n                    paddingBottom: '10px',\r\n                    '&.Mui-selected': {\r\n                        color: theme.menuSelected,\r\n                        backgroundColor: theme.menuSelectedBack,\r\n                        '&:hover': {\r\n                            backgroundColor: theme.menuSelectedBack\r\n                        },\r\n                        '& .MuiListItemIcon-root': {\r\n                            color: theme.menuSelected\r\n                        }\r\n                    },\r\n                    '&:hover': {\r\n                        backgroundColor: theme.menuSelectedBack,\r\n                        color: theme.menuSelected,\r\n                        '& .MuiListItemIcon-root': {\r\n                            color: theme.menuSelected\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        MuiListItemIcon: {\r\n            styleOverrides: {\r\n                root: {\r\n                    color: theme.darkTextPrimary,\r\n                    minWidth: '36px'\r\n                }\r\n            }\r\n        },\r\n        MuiListItemText: {\r\n            styleOverrides: {\r\n                primary: {\r\n                    color: theme.textDark\r\n                }\r\n            }\r\n        },\r\n        MuiInputBase: {\r\n            styleOverrides: {\r\n                input: {\r\n                    color: theme.textDark,\r\n                    '&::placeholder': {\r\n                        color: theme.darkTextSecondary,\r\n                        fontSize: '0.875rem'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        MuiOutlinedInput: {\r\n            styleOverrides: {\r\n                root: {\r\n                    background: bgColor,\r\n                    borderRadius: `${theme?.customization?.borderRadius}px`,\r\n                    '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: theme.colors?.grey400\r\n                    },\r\n                    '&:hover $notchedOutline': {\r\n                        borderColor: theme.colors?.primaryLight\r\n                    },\r\n                    '&.MuiInputBase-multiline': {\r\n                        padding: 1\r\n                    }\r\n                },\r\n                input: {\r\n                    fontWeight: 500,\r\n                    background: bgColor,\r\n                    padding: '15.5px 14px',\r\n                    borderRadius: `${theme?.customization?.borderRadius}px`,\r\n                    '&.MuiInputBase-inputSizeSmall': {\r\n                        padding: '10px 14px',\r\n                        '&.MuiInputBase-inputAdornedStart': {\r\n                            paddingLeft: 0\r\n                        }\r\n                    }\r\n                },\r\n                inputAdornedStart: {\r\n                    paddingLeft: 4\r\n                },\r\n                notchedOutline: {\r\n                    borderRadius: `${theme?.customization?.borderRadius}px`\r\n                }\r\n            }\r\n        },\r\n        MuiSlider: {\r\n            styleOverrides: {\r\n                root: {\r\n                    '&.Mui-disabled': {\r\n                        color: theme.colors?.grey300\r\n                    }\r\n                },\r\n                mark: {\r\n                    backgroundColor: theme.paper,\r\n                    width: '4px'\r\n                },\r\n                valueLabel: {\r\n                    color: theme?.colors?.primaryLight\r\n                }\r\n            }\r\n        },\r\n        MuiDivider: {\r\n            styleOverrides: {\r\n                root: {\r\n                    borderColor: theme.divider,\r\n                    opacity: 1\r\n                }\r\n            }\r\n        },\r\n        MuiAvatar: {\r\n            styleOverrides: {\r\n                root: {\r\n                    color: theme.colors?.primaryDark,\r\n                    background: theme.colors?.primary200\r\n                }\r\n            }\r\n        },\r\n        MuiChip: {\r\n            styleOverrides: {\r\n                root: {\r\n                    '&.MuiChip-deletable .MuiChip-deleteIcon': {\r\n                        color: 'inherit'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        MuiTooltip: {\r\n            styleOverrides: {\r\n                tooltip: {\r\n                    color: theme.paper,\r\n                    background: theme.colors?.grey700\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { CssBaseline, StyledEngineProvider } from '@mui/material';\r\nimport Routes from '@/routes';\r\nimport themes from '@/core/themes';\r\nimport { NavigationScroll } from '@/containers';\r\n\r\nconst App = () => {\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    return (\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={themes(customization)}>\r\n                <CssBaseline />\r\n                <NavigationScroll>\r\n                    <Routes />\r\n                </NavigationScroll>\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { persistStore } from 'redux-persist';\r\nimport { store } from './core/store';\r\nimport App from './App';\r\nimport './assets/scss/style.scss';\r\n\r\nconst persistor = persistStore(store);\r\n\r\nstore.subscribe(() => console.log(store.getState()));\r\nconst Element = (\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </PersistGate>\r\n    </Provider>\r\n);\r\n\r\nconst container = document.getElementById('app');\r\n\r\nReactDOM.render(Element, container);\r\n"],"names":["map","Map","set","item","Date","toLocaleDateString","toLocaleTimeString","cacheOfDictionaries","find","obj","id","name","key","displayName","Number","toFixed","style","width","undefined","props","headCells","rows","changeStyle","isActive","children","selected","handleSelectAllTableRows","handleSelectTableRow","isRowNotClickable","theme","useTheme","useNavigate","useState","type","page","rowsPerPage","open","getStatusView","dictionary","findStatusObject","chip","error","value","warning","success","Chip","label","sx","Math","max","length","colorItem","color","mb","background","LoaderWrapper","styled","position","top","left","zIndex","LinearProgress","Component","Suspense","fallback","len","display","alignItems","border","palette","divider","borderRadius","bgcolor","height","p","mx","el","index","Fragment","nanoid","orientation","variant","flexItem","enLocale","frLocale","ruLocale","deLocale","isOpenModal","closeModal","title","className","initWidth","initHeight","onRequestClose","isOpen","newsx","CircularProgress","grey","mode","size","thickness","disableShrink","animationDuration","circularProgressClasses","strokeLinecap","moreThanZero","params","currencyFormatter","Intl","NumberFormat","currency","usdPrice","minWidth","cellClassName","valueFormatter","format","columns","field","headerName","hideable","valueFormatted","toLocaleString","price","stock_of_capital","number_of_persons_employed","total_money_supply","interest_on_capital","market_cap","DataTable","backgroundColor","justifyContent","DataGrid","pageSize","rowsPerPageOptions","Main","shouldForwardProp","prop","typography","mainContent","dispatch","useDispatch","setIsDictionariesRequested","useEffect","getDictionaries","then","gridTemplateColumns","gap","mt","cursor","padding","primary","light","IconUsers","IconFileLike","IconKey","IconFileAnalytics","IconMessages","IconUserCheck","IconBook","IconNotebook","IconFileReport","pathname","useLocation","window","scrollTo","behavior","commonStates","commonHandlers","reloadPage","contractPaymentSchedule","isOpenPaymentSchedule","handleIsOpenPaymentSchedule","gridColumn","paddingTop","startIcon","Close","maxHeight","onClick","headCellsPaymentSchedule","changeDepositPaymentSchedule","paymentSettingText","paymentSettingId","statusText","status","changeBondIssueList","bondIssueList","clientList","emitent","list","clientId","fullName","currencyText","currencyId","period","changeAgencyAgreementList","contractDate","contractNumber","identityNumber","client","fio","headCellsBondIssueList","payDayList","capitalization","gender","translationTypeOfProps","translationOfContactTypes","translationBank","getAgencyAgreements","listPending","request","data","getAgencyAgreementList","errorPromise","handleErrors","getBondIssueList","addAlertToList","message","getBondIssueSuccess","getBondIssue","Error","createBondIssueConstructor","signBondIssueById","getClientList","getClientListSuccess","requestHelper","endpoint","dictionaryName","slice","lastIndexOf","has","get","arr","Array","isArray","Promise","all","unstable_batchedUpdates","model","isBank","defaultError","json","res","errors","payload","constants","ADD_ALERT_TO_LIST","REMOVE_FIRST_ALERT_FROM_LIST","CONSTRUCTOR_PENDING","CREATE_DEPOSIT_CONTRACT","SIGN_DEPOSIT_CONTRACT","CREATE_BOND_AGREEMENT","CREATE_BOND_ISSUE","SIGN_BOND_ISSUE","LIST_PENDING","GET_CLIENT_LIST_SUCCESS","GET_DEPOSIT_AGREEMENT_LIST_SUCCESS","GET_BOND_ISSUE_LIST","GET_BOND_AGREEMENT_LIST","GET_AGENCY_AGREEMENT_LIST","GET_ORDER_LIST","method","isReturnJson","uri","localStorage","getItem","config","opts","headers","accept","test","body","JSON","stringify","fetch","removeItem","location","href","origin","ok","reject","patch","post","put","delete","initialState","opened","state","action","pending","depositAgreementList","bondAgreementList","agencyAgreementList","orderList","show","depositContract","signedDepositContract","bondAgreement","bondIssue","signedBondIssue","combineReducers","customization","constructors","lists","alerts","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunk","BondIssueList","Loadable","lazy","path","element","themeTypography","fontFamily","h6","fontWeight","heading","fontSize","h5","h4","h3","h2","h1","subtitle1","textDark","subtitle2","darkTextSecondary","caption","body1","lineHeight","body2","letterSpacing","darkTextPrimary","button","textTransform","customInput","marginTop","marginBottom","grey500","minHeight","flexGrow","marginRight","menuCaption","subMenuCaption","commonAvatar","smallAvatar","mediumAvatar","largeAvatar","themeOption","colors","grey900","paper","backgroundDefault","primaryLight","grey700","menuSelected","secondaryDark","menuSelectedBack","secondaryLight","grey200","navType","common","black","darkPaper","main","primaryMain","dark","primaryDark","primary200","primary800","secondary","secondaryMain","secondary200","secondary800","errorLight","errorMain","errorDark","orange","orangeLight","orangeMain","orangeDark","warningLight","warningMain","warningDark","successLight","success200","successMain","successDark","grey50","grey100","darkLevel1","darkLevel2","darkBackground","text","hint","default","themePalette","chipSX","themeOptions","direction","mixins","toolbar","themes","createTheme","components","bgColor","MuiButton","styleOverrides","root","MuiPaper","defaultProps","elevation","backgroundImage","rounded","MuiCardHeader","MuiCardContent","MuiCardActions","MuiListItemButton","paddingBottom","MuiListItemIcon","MuiListItemText","MuiInputBase","input","MuiOutlinedInput","borderColor","grey400","paddingLeft","inputAdornedStart","notchedOutline","MuiSlider","grey300","mark","valueLabel","MuiDivider","opacity","MuiAvatar","MuiChip","MuiTooltip","tooltip","componentStyleOverrides","useSelector","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","persistor","persistStore","subscribe","console","log","getState","Element","loading","container","document","getElementById","ReactDOM"],"sourceRoot":""}