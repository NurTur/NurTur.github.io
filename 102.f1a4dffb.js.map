{"version":3,"file":"102.f1a4dffb.js","mappings":"mQAUMA,EAAY,CACd,CACIC,GAAI,iBACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,aAEX,CACIH,GAAI,MACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,yBA+Cf,QA3CA,WACI,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAyEC,EAAAA,EAAAA,IAAoB,IAA7F,eAAOC,EAAP,KAAiBC,EAAjB,KAAuBC,EAAvB,KAAiDC,EAAjD,KAMA,OAJoBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,MAAY,CAAEC,QAASD,EAAME,MAAMD,YAA3DA,QAKG,gBAAC,KAAD,MAIP,gCACI,gBAAC,IAAD,CAAKE,WAAW,UAAUC,GAAI,CAAEC,QAAS,OAAQC,eAAgB,UAC7D,gBAAC,IAAD,CACIC,QAAQ,YACRC,UAAW,gBAAC,IAAD,MACXJ,GAAI,CAAEK,WAAY,UAAWC,GAAI,GACjCC,QAbO,kBAAMnB,EAAS,qBAetB,wBAAMoB,MAAO,CAAEC,WAAY,SAA3B,aAGR,gBAAC,IAAD,CAAKV,WAAW,WACZ,gBAAC,KAAD,CACIhB,UAAWA,EACX2B,KAAMlB,EACND,SAAUA,EACVE,yBAA0BA,EAC1BC,qBAAsBA,GAEtB,gBAAC,IAAD,CAAciB,YAAapB,EAASqB,QAChC,gBAAC,IAAD,CAAQT,QAAQ,YAAYC,UAAW,gBAAC,IAAD,OAAvC","sources":["webpack://new_react_lending/./src/views/clientList/index.jsx"],"sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, Grid, Box } from '@mui/material';\r\nimport { useSelectedTableRow } from '@/core/hooks';\r\nimport { Table, Loader } from '@/components';\r\nimport TableToolbar from '@/components/table/tableToolbar';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'identityNumber',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'ИИН / БИН'\r\n    },\r\n    {\r\n        id: 'fio',\r\n        numeric: false,\r\n        disablePadding: false,\r\n        label: 'Ф.И.О / Наименование'\r\n    }\r\n];\r\n\r\nfunction ClientList() {\r\n    const navigate = useNavigate();\r\n    const [selected, list, handleSelectAllTableRows, handleSelectTableRow] = useSelectedTableRow([]);\r\n\r\n    const { pending } = useSelector((state) => ({ pending: state.lists.pending }));\r\n\r\n    const handleNavigate = () => navigate('/clients/create');\r\n\r\n    if (pending) {\r\n        return <Loader />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box gridColumn=\"span 12\" sx={{ display: 'flex', justifyContent: 'right' }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<CreateNewFolderIcon />}\r\n                    sx={{ background: '#0064ff', mr: 3 }}\r\n                    onClick={handleNavigate}\r\n                >\r\n                    <span style={{ fontWeight: 'bold' }}>Создать</span>\r\n                </Button>\r\n            </Box>\r\n            <Box gridColumn=\"span 12\">\r\n                <Table\r\n                    headCells={headCells}\r\n                    rows={list}\r\n                    selected={selected}\r\n                    handleSelectAllTableRows={handleSelectAllTableRows}\r\n                    handleSelectTableRow={handleSelectTableRow}\r\n                >\r\n                    <TableToolbar numSelected={selected.length}>\r\n                        <Button variant=\"contained\" startIcon={<FilterListIcon />}>\r\n                            Фильтр\r\n                        </Button>\r\n                    </TableToolbar>\r\n                </Table>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ClientList;\r\n"],"names":["headCells","id","numeric","disablePadding","label","navigate","useNavigate","useSelectedTableRow","selected","list","handleSelectAllTableRows","handleSelectTableRow","useSelector","state","pending","lists","gridColumn","sx","display","justifyContent","variant","startIcon","background","mr","onClick","style","fontWeight","rows","numSelected","length"],"sourceRoot":""}