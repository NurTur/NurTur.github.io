{"version":3,"file":"npm.date-io.817c711b.js","mappings":"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","sources":["webpack://new_react_lending/./node_modules/@date-io/date-fns/build/index.esm.js"],"sourcesContent":["import addDays from 'date-fns/addDays';\nimport addSeconds from 'date-fns/addSeconds';\nimport addMinutes from 'date-fns/addMinutes';\nimport addHours from 'date-fns/addHours';\nimport addWeeks from 'date-fns/addWeeks';\nimport addMonths from 'date-fns/addMonths';\nimport addYears from 'date-fns/addYears';\nimport differenceInYears from 'date-fns/differenceInYears';\nimport differenceInQuarters from 'date-fns/differenceInQuarters';\nimport differenceInMonths from 'date-fns/differenceInMonths';\nimport differenceInWeeks from 'date-fns/differenceInWeeks';\nimport differenceInDays from 'date-fns/differenceInDays';\nimport differenceInHours from 'date-fns/differenceInHours';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\nimport differenceInSeconds from 'date-fns/differenceInSeconds';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfDay from 'date-fns/endOfDay';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport endOfYear from 'date-fns/endOfYear';\nimport format from 'date-fns/format';\nimport getHours from 'date-fns/getHours';\nimport getSeconds from 'date-fns/getSeconds';\nimport getYear from 'date-fns/getYear';\nimport isAfter from 'date-fns/isAfter';\nimport isBefore from 'date-fns/isBefore';\nimport isEqual from 'date-fns/isEqual';\nimport isSameDay from 'date-fns/isSameDay';\nimport isSameYear from 'date-fns/isSameYear';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameHour from 'date-fns/isSameHour';\nimport isValid from 'date-fns/isValid';\nimport dateFnsParse from 'date-fns/parse';\nimport setHours from 'date-fns/setHours';\nimport setMinutes from 'date-fns/setMinutes';\nimport setMonth from 'date-fns/setMonth';\nimport getDay from 'date-fns/getDay';\nimport getDaysInMonth from 'date-fns/getDaysInMonth';\nimport setSeconds from 'date-fns/setSeconds';\nimport setYear from 'date-fns/setYear';\nimport startOfDay from 'date-fns/startOfDay';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport startOfYear from 'date-fns/startOfYear';\nimport parseISO from 'date-fns/parseISO';\nimport formatISO from 'date-fns/formatISO';\nimport isWithinInterval from 'date-fns/isWithinInterval';\nimport longFormatters from 'date-fns/_lib/format/longFormatters';\nimport defaultLocale from 'date-fns/locale/en-US';\n\nvar defaultFormats = {\n    dayOfMonth: \"d\",\n    fullDate: \"PP\",\n    fullDateWithWeekday: \"PPPP\",\n    fullDateTime: \"PP p\",\n    fullDateTime12h: \"PP hh:mm aaa\",\n    fullDateTime24h: \"PP HH:mm\",\n    fullTime: \"p\",\n    fullTime12h: \"hh:mm aaa\",\n    fullTime24h: \"HH:mm\",\n    hours12h: \"hh\",\n    hours24h: \"HH\",\n    keyboardDate: \"P\",\n    keyboardDateTime: \"P p\",\n    keyboardDateTime12h: \"P hh:mm aaa\",\n    keyboardDateTime24h: \"P HH:mm\",\n    minutes: \"mm\",\n    month: \"LLLL\",\n    monthAndDate: \"MMMM d\",\n    monthAndYear: \"LLLL yyyy\",\n    monthShort: \"MMM\",\n    weekday: \"EEEE\",\n    weekdayShort: \"EEE\",\n    normalDate: \"d MMMM\",\n    normalDateWithWeekday: \"EEE, MMM d\",\n    seconds: \"ss\",\n    shortDate: \"MMM d\",\n    year: \"yyyy\",\n};\nvar DateFnsUtils = /** @class */ (function () {\n    function DateFnsUtils(_a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, locale = _b.locale, formats = _b.formats;\n        this.lib = \"date-fns\";\n        // Note: date-fns input types are more lenient than this adapter, so we need to expose our more\n        // strict signature and delegate to the more lenient signature. Otherwise, we have downstream type errors upon usage.\n        this.is12HourCycleInCurrentLocale = function () {\n            if (_this.locale) {\n                return /a/.test(_this.locale.formatLong.time());\n            }\n            // By default date-fns is using en-US locale with am/pm enabled\n            return true;\n        };\n        this.getFormatHelperText = function (format) {\n            // @see https://github.com/date-fns/date-fns/blob/master/src/format/index.js#L31\n            var longFormatRegexp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n            var locale = _this.locale || defaultLocale;\n            return format\n                .match(longFormatRegexp)\n                .map(function (token) {\n                var firstCharacter = token[0];\n                if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n                    var longFormatter = longFormatters[firstCharacter];\n                    return longFormatter(token, locale.formatLong, {});\n                }\n                return token;\n            })\n                .join(\"\")\n                .replace(/(aaa|aa|a)/g, \"(a|p)m\")\n                .toLocaleLowerCase();\n        };\n        this.parseISO = function (isoString) {\n            return parseISO(isoString);\n        };\n        this.toISO = function (value) {\n            return formatISO(value, { format: \"extended\" });\n        };\n        this.getCurrentLocaleCode = function () {\n            var _a;\n            return ((_a = _this.locale) === null || _a === void 0 ? void 0 : _a.code) || \"en-US\";\n        };\n        this.addSeconds = function (value, count) {\n            return addSeconds(value, count);\n        };\n        this.addMinutes = function (value, count) {\n            return addMinutes(value, count);\n        };\n        this.addHours = function (value, count) {\n            return addHours(value, count);\n        };\n        this.addDays = function (value, count) {\n            return addDays(value, count);\n        };\n        this.addWeeks = function (value, count) {\n            return addWeeks(value, count);\n        };\n        this.addMonths = function (value, count) {\n            return addMonths(value, count);\n        };\n        this.isValid = function (value) {\n            return isValid(_this.date(value));\n        };\n        this.getDiff = function (value, comparing, unit) {\n            switch (unit) {\n                case \"years\":\n                    return differenceInYears(value, _this.date(comparing));\n                case \"quarters\":\n                    return differenceInQuarters(value, _this.date(comparing));\n                case \"months\":\n                    return differenceInMonths(value, _this.date(comparing));\n                case \"weeks\":\n                    return differenceInWeeks(value, _this.date(comparing));\n                case \"days\":\n                    return differenceInDays(value, _this.date(comparing));\n                case \"hours\":\n                    return differenceInHours(value, _this.date(comparing));\n                case \"minutes\":\n                    return differenceInMinutes(value, _this.date(comparing));\n                case \"seconds\":\n                    return differenceInSeconds(value, _this.date(comparing));\n                default: {\n                    return differenceInMilliseconds(value, _this.date(comparing));\n                }\n            }\n        };\n        this.isAfter = function (value, comparing) {\n            return isAfter(value, comparing);\n        };\n        this.isBefore = function (value, comparing) {\n            return isBefore(value, comparing);\n        };\n        this.startOfDay = function (value) {\n            return startOfDay(value);\n        };\n        this.endOfDay = function (value) {\n            return endOfDay(value);\n        };\n        this.getHours = function (value) {\n            return getHours(value);\n        };\n        this.setHours = function (value, count) {\n            return setHours(value, count);\n        };\n        this.setMinutes = function (value, count) {\n            return setMinutes(value, count);\n        };\n        this.getSeconds = function (value) {\n            return getSeconds(value);\n        };\n        this.setSeconds = function (value, count) {\n            return setSeconds(value, count);\n        };\n        this.isSameDay = function (value, comparing) {\n            return isSameDay(value, comparing);\n        };\n        this.isSameMonth = function (value, comparing) {\n            return isSameMonth(value, comparing);\n        };\n        this.isSameYear = function (value, comparing) {\n            return isSameYear(value, comparing);\n        };\n        this.isSameHour = function (value, comparing) {\n            return isSameHour(value, comparing);\n        };\n        this.startOfMonth = function (value) {\n            return startOfMonth(value);\n        };\n        this.endOfMonth = function (value) {\n            return endOfMonth(value);\n        };\n        this.startOfWeek = function (value) {\n            return startOfWeek(value, { locale: _this.locale });\n        };\n        this.endOfWeek = function (value) {\n            return endOfWeek(value, { locale: _this.locale });\n        };\n        this.getYear = function (value) {\n            return getYear(value);\n        };\n        this.setYear = function (value, count) {\n            return setYear(value, count);\n        };\n        this.date = function (value) {\n            if (typeof value === \"undefined\") {\n                return new Date();\n            }\n            if (value === null) {\n                return null;\n            }\n            return new Date(value);\n        };\n        this.toJsDate = function (value) {\n            return value;\n        };\n        this.parse = function (value, formatString) {\n            if (value === \"\") {\n                return null;\n            }\n            return dateFnsParse(value, formatString, new Date(), { locale: _this.locale });\n        };\n        this.format = function (date, formatKey) {\n            return _this.formatByString(date, _this.formats[formatKey]);\n        };\n        this.formatByString = function (date, formatString) {\n            return format(date, formatString, { locale: _this.locale });\n        };\n        this.isEqual = function (date, comparing) {\n            if (date === null && comparing === null) {\n                return true;\n            }\n            return isEqual(date, comparing);\n        };\n        this.isNull = function (date) {\n            return date === null;\n        };\n        this.isAfterDay = function (date, value) {\n            return isAfter(date, endOfDay(value));\n        };\n        this.isBeforeDay = function (date, value) {\n            return isBefore(date, startOfDay(value));\n        };\n        this.isBeforeYear = function (date, value) {\n            return isBefore(date, startOfYear(value));\n        };\n        this.isAfterYear = function (date, value) {\n            return isAfter(date, endOfYear(value));\n        };\n        this.isWithinRange = function (date, _a) {\n            var start = _a[0], end = _a[1];\n            return isWithinInterval(date, { start: start, end: end });\n        };\n        this.formatNumber = function (numberToFormat) {\n            return numberToFormat;\n        };\n        this.getMinutes = function (date) {\n            return date.getMinutes();\n        };\n        this.getMonth = function (date) {\n            return date.getMonth();\n        };\n        this.getDaysInMonth = function (date) {\n            return getDaysInMonth(date);\n        };\n        this.setMonth = function (date, count) {\n            return setMonth(date, count);\n        };\n        this.getMeridiemText = function (ampm) {\n            return ampm === \"am\" ? \"AM\" : \"PM\";\n        };\n        this.getNextMonth = function (date) {\n            return addMonths(date, 1);\n        };\n        this.getPreviousMonth = function (date) {\n            return addMonths(date, -1);\n        };\n        this.getMonthArray = function (date) {\n            var firstMonth = startOfYear(date);\n            var monthArray = [firstMonth];\n            while (monthArray.length < 12) {\n                var prevMonth = monthArray[monthArray.length - 1];\n                monthArray.push(_this.getNextMonth(prevMonth));\n            }\n            return monthArray;\n        };\n        this.mergeDateAndTime = function (date, time) {\n            return _this.setSeconds(_this.setMinutes(_this.setHours(date, _this.getHours(time)), _this.getMinutes(time)), _this.getSeconds(time));\n        };\n        this.getWeekdays = function () {\n            var now = new Date();\n            return eachDayOfInterval({\n                start: startOfWeek(now, { locale: _this.locale }),\n                end: endOfWeek(now, { locale: _this.locale }),\n            }).map(function (day) { return _this.formatByString(day, \"EEEEEE\"); });\n        };\n        this.getWeekArray = function (date) {\n            var start = startOfWeek(startOfMonth(date), { locale: _this.locale });\n            var end = endOfWeek(endOfMonth(date), { locale: _this.locale });\n            var count = 0;\n            var current = start;\n            var nestedWeeks = [];\n            var lastDay = null;\n            while (isBefore(current, end)) {\n                var weekNumber = Math.floor(count / 7);\n                nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n                var day = getDay(current);\n                if (lastDay !== day) {\n                    lastDay = day;\n                    nestedWeeks[weekNumber].push(current);\n                    count += 1;\n                }\n                current = addDays(current, 1);\n            }\n            return nestedWeeks;\n        };\n        this.getYearRange = function (start, end) {\n            var startDate = startOfYear(start);\n            var endDate = endOfYear(end);\n            var years = [];\n            var current = startDate;\n            while (isBefore(current, endDate)) {\n                years.push(current);\n                current = addYears(current, 1);\n            }\n            return years;\n        };\n        this.locale = locale;\n        this.formats = Object.assign({}, defaultFormats, formats);\n    }\n    return DateFnsUtils;\n}());\n\nexport default DateFnsUtils;\n"],"names":["defaultFormats","dayOfMonth","fullDate","fullDateWithWeekday","fullDateTime","fullDateTime12h","fullDateTime24h","fullTime","fullTime12h","fullTime24h","hours12h","hours24h","keyboardDate","keyboardDateTime","keyboardDateTime12h","keyboardDateTime24h","minutes","month","monthAndDate","monthAndYear","monthShort","weekday","weekdayShort","normalDate","normalDateWithWeekday","seconds","shortDate","year","_a","_this","this","_b","locale","formats","lib","is12HourCycleInCurrentLocale","test","formatLong","time","getFormatHelperText","format","match","map","token","firstCharacter","longFormatter","join","replace","toLocaleLowerCase","parseISO","isoString","toISO","value","getCurrentLocaleCode","code","addSeconds","count","addMinutes","addHours","addDays","addWeeks","addMonths","isValid","date","getDiff","comparing","unit","isAfter","isBefore","startOfDay","endOfDay","getHours","setHours","setMinutes","getSeconds","setSeconds","isSameDay","isSameMonth","isSameYear","isSameHour","startOfMonth","endOfMonth","startOfWeek","endOfWeek","getYear","setYear","Date","toJsDate","parse","formatString","formatKey","formatByString","isEqual","isNull","isAfterDay","isBeforeDay","isBeforeYear","isAfterYear","isWithinRange","start","end","formatNumber","numberToFormat","getMinutes","getMonth","getDaysInMonth","setMonth","getMeridiemText","ampm","getNextMonth","getPreviousMonth","getMonthArray","monthArray","length","prevMonth","push","mergeDateAndTime","getWeekdays","now","day","getWeekArray","current","nestedWeeks","lastDay","weekNumber","Math","floor","getYearRange","startDate","endDate","years","Object","assign"],"sourceRoot":""}